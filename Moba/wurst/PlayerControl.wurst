package PlayerControl

/*
* This package handles players
*
*
*/

public CPlayer array allCPlayers

function initPlayers()
    for i = 0 to 9
        player p = players[i]
        Team t = i<=5?Team.TEAM1:Team.TEAM2
        if( p.getSlotState()==PLAYER_SLOT_STATE_PLAYING )
            allCPlayers[i] = new CPlayer(p, t, PlayerType.HERO)
        else
            allCPlayers[i] = new CPlayer(p, t, PlayerType.NONE)


    allCPlayers[10] = new CPlayer(players[10], Team.TEAM1, PlayerType.ARMY)
    allCPlayers[11] = new CPlayer(players[11], Team.TEAM2, PlayerType.ARMY)
    allCPlayers[12] = new CPlayer(players[12], Team.NEUTRAL_HOSTILE, PlayerType.NEUTRAL)
    for i=13 to 15
        allCPlayers[15] = new CPlayer(players[15], Team.NEUTRAL_PASSIVE, PlayerType.NEUTRAL)
        


public enum Team
    TEAM1
    TEAM2
    NEUTRAL_HOSTILE
    NEUTRAL_PASSIVE

public enum PlayerType
    HERO
    NONE
    ARMY
    NEUTRAL

public function player.getCPlayer() returns CPlayer
    return CPlayer.idToPlayer[this.getId()]

//player class
public class CPlayer

    private player assocPlayer
    private int playerId
    
    protected static CPlayer array idToPlayer
    private Team team
    private PlayerType playertype

    construct(player p, Team t, PlayerType pType)
        this.assocPlayer = p
        this.playerId = p.getId()
        this.team = t
        this.playertype = pType
        idToPlayer[this.playerId] = this
    
    function toString() returns string
        return "Player = "+assocPlayer.getName()

    function getPlayer() returns player
        return this.assocPlayer
    
    function getId() returns integer
        return this.playerId

    function getTeam() returns Team
        return this.team

    function getPlayerType() returns PlayerType
        return this.playertype

init
    initPlayers()