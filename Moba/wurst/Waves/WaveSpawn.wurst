package WaveSpawn

import ClosureTimers
import UnitTypeConfig
import PathUnit
import LinkedList
import BuildingTypes
import ErrorHandling
import General
import HashSet
import SoundUtils

constant SOUND_FIRST_SPAWN = new SoundDefinition(Sounds.clanInvitation, false, false)

constant real SPAWN_INTERVAL = 50
boolean spawnStarted = false
boolean spawnStopped = false

constant topUnitIds = new LinkedList<int>()
constant midUnitsIds = new LinkedList<int>()
constant botUnitsIds = new LinkedList<int>()

constant topUnitIds2 = new LinkedList<int>()
constant midUnitsIds2 = new LinkedList<int>()
constant botUnitsIds2 = new LinkedList<int>()

public constant team1Units = new HashSet<unit>()
public constant team2Units = new HashSet<unit>()

int topUnitIdsSize
int midUnitsIdsSize
int botUnitsIdsSize

public int array laneUnitCountTeam1
public int array laneUnitCountTeam2

function Lane.toInt() returns int
    if this == Lane.TOP
        return 0
    if this == Lane.MID
        return 1
    if this == Lane.BOT
        return 2
    
    return -1

function setLaneUnitCount(Team t, Lane l, int count)
    if t == Team.TEAM1
        laneUnitCountTeam1[l.toInt()] = count
    else if t == Team.TEAM2
        laneUnitCountTeam2[l.toInt()] = count
    else
        error("Cannot set lane count for this team.")

function getLaneUnitCount(Team t, Lane l) returns int
    if t == Team.TEAM1
        return laneUnitCountTeam1[l.toInt()]
    else if t == Team.TEAM2
        return laneUnitCountTeam2[l.toInt()]
    else
        error("Cannot set lane count for this team.")
        return -1

public function addLaneUnitCount(Team t, Lane l, int count)
    setLaneUnitCount(t, l, getLaneUnitCount(t, l)+count)

public function startSpawning()
    if spawnStarted
        error("Spawning has already started.")
    else
        if DEBUG_MODE
            spawnWave()

        doAfter(SPAWN_INTERVAL) ->
            SOUND_FIRST_SPAWN.play()
            print("|cffffcc00The battle begins!|r")

            if GetLocalPlayer().getId() <= HERO_PLAYER_TEAM_1_LAST
                PingMinimap(udg_GreenBarracks[0].getX(), udg_GreenBarracks[0].getY(), 5)
                PingMinimap(udg_GreenBarracks[1].getX(), udg_GreenBarracks[1].getY(), 5)
                PingMinimap(udg_GreenBarracks[2].getX(), udg_GreenBarracks[2].getY(), 5)
            else
                PingMinimap(udg_BrownBarracks[0].getX(), udg_BrownBarracks[0].getY(), 5)
                PingMinimap(udg_BrownBarracks[1].getX(), udg_BrownBarracks[1].getY(), 5)
                PingMinimap(udg_BrownBarracks[2].getX(), udg_BrownBarracks[2].getY(), 5)

        doPeriodically(SPAWN_INTERVAL, (CallbackPeriodic cb) -> (begin
            if spawnStopped
                destroy cb
            else
                spawnWave()
        end))
        spawnStarted = true

public function stopSpawning()
    spawnStopped = true

public function spawnUnit( boolean firstTeam, int unitId, vec2 startPos) returns unit
    let p = players[firstTeam ? TEAM_PLAYER_TEAM_1 : TEAM_PLAYER_TEAM_2]
    let spawnedUnit = createUnit(p, unitId, firstTeam ? gg_rct_BrownCastle.getRightTop() : gg_rct_GreenCastle.getLeftBot() , angle(45. + (firstTeam ? 0 : 180) ))
        ..setPos(startPos)
    return spawnedUnit


function setupSpawnUnits()
    //topUnitIds.add(FOOTMAN)
    topUnitIds.add(FOOTMAN)
    topUnitIds.add(FOOTMAN)
    topUnitIds.add(FOOTMAN)
    topUnitIds.add(RIFLEMAN)
    topUnitIds.add(RIFLEMAN)

    //topUnitIds2.add(FOOTMAN_2)
    topUnitIds2.add(FOOTMAN_2)
    topUnitIds2.add(FOOTMAN_2)
    topUnitIds2.add(FOOTMAN_2)
    topUnitIds2.add(RIFLEMAN_2)
    topUnitIds2.add(RIFLEMAN_2)

    topUnitIdsSize = topUnitIds.size()

    midUnitsIds.add(FOOTMAN)
    midUnitsIds.add(FOOTMAN)
    midUnitsIds.add(FOOTMAN)
    midUnitsIds.add(KNIGHT)
    //midUnitsIds.add(KNIGHT)
    midUnitsIds.add(RIFLEMAN)
    midUnitsIds.add(RIFLEMAN)
    //midUnitsIds.add(RIFLEMAN)

    midUnitsIds2.add(FOOTMAN_2)
    midUnitsIds2.add(FOOTMAN_2)
    midUnitsIds2.add(FOOTMAN_2)
    midUnitsIds2.add(KNIGHT_2)
    //midUnitsIds2.add(KNIGHT_2)
    midUnitsIds2.add(RIFLEMAN_2)
    midUnitsIds2.add(RIFLEMAN_2)
    //midUnitsIds2.add(RIFLEMAN_2)

    midUnitsIdsSize = midUnitsIds.size()

    //botUnitsIds.add(FOOTMAN)
    botUnitsIds.add(FOOTMAN)
    botUnitsIds.add(FOOTMAN)
    botUnitsIds.add(FOOTMAN)
    botUnitsIds.add(RIFLEMAN)
    botUnitsIds.add(RIFLEMAN)

    //botUnitsIds2.add(FOOTMAN_2)
    botUnitsIds2.add(FOOTMAN_2)
    botUnitsIds2.add(FOOTMAN_2)
    botUnitsIds2.add(FOOTMAN_2)
    botUnitsIds2.add(RIFLEMAN_2)
    botUnitsIds2.add(RIFLEMAN_2)

    botUnitsIdsSize = botUnitsIds.size()

function spawnWave()

    if spawnStopped
        return

    int counter

    int i


    let greenCountTop = getLaneUnitCount(Team.TEAM1, Lane.TOP)// + topUnitIdsSize
    let brownCountTop = getLaneUnitCount(Team.TEAM2, Lane.TOP)// + topUnitIdsSize

    let greenCountMid = getLaneUnitCount(Team.TEAM1, Lane.MID)// + midUnitsIdsSize
    let brownCountMid = getLaneUnitCount(Team.TEAM2, Lane.MID)// + midUnitsIdsSize

    let greenCountBot = getLaneUnitCount(Team.TEAM1, Lane.BOT)// + botUnitsIdsSize
    let brownCountBot = getLaneUnitCount(Team.TEAM2, Lane.BOT)// + botUnitsIdsSize

    income()

    counter = 0
    for int unitId in topUnitIds
        doAfter(counter*0.25, () -> (begin
            if not spawnStopped
                unit spawnedUnit
                if barracksAliveTeam1[0]
                    spawnedUnit = spawnUnit(true, unitId, gg_rct_GreenSpawnTop.getCenter())
                    new PathUnitNew(spawnedUnit, AssignedPath.GREEN_TOP)

        end))
        counter++

    counter = 0
    for int unitId in topUnitIds2
        doAfter(counter*0.25, () -> (begin
            if not spawnStopped
                unit spawnedUnit
                if barracksAliveTeam2[0]
                    spawnedUnit = spawnUnit(false, unitId, gg_rct_BrownSpawnTop.getCenter())
                    new PathUnitNew(spawnedUnit, AssignedPath.BROWN_TOP)

        end))
        counter++



    i = 1
    while greenCountTop < brownCountTop - 2*i and i <= 3
        doAfter(counter*0.25, () -> (begin
            if not spawnStopped
                if barracksAliveTeam1[0]
                    unit spawnedUnit
                    spawnedUnit = spawnUnit(true, MILITIA, gg_rct_GreenSpawnTop.getCenter())
                    new PathUnitNew(spawnedUnit, AssignedPath.GREEN_TOP)

        end))
        counter++
        i ++

    
    i = 1
    while brownCountTop < greenCountTop - 2*i and i <= 3
        doAfter(counter*0.25, () -> (begin
            if not spawnStopped
                if barracksAliveTeam2[0]
                    unit spawnedUnit
                    spawnedUnit = spawnUnit(false, MILITIA_2, gg_rct_BrownSpawnTop.getCenter())
                    new PathUnitNew(spawnedUnit, AssignedPath.BROWN_TOP)

        end))
        counter++
        i ++




    counter = 0
    for int unitId in midUnitsIds
        doAfter(counter*0.25, () -> (begin
            if not spawnStopped
                unit spawnedUnit
                if barracksAliveTeam1[1]
                    spawnedUnit = spawnUnit(true, unitId, gg_rct_GreenSpawnMid.getCenter())
                    new PathUnitNew(spawnedUnit, AssignedPath.GREEN_MID)

        end))
        counter++

    counter = 0
    for int unitId in midUnitsIds2
        doAfter(counter*0.25, () -> (begin
            if not spawnStopped
                unit spawnedUnit
                if barracksAliveTeam2[1]
                    spawnedUnit = spawnUnit(false, unitId, gg_rct_BrownSpawnMid.getCenter())
                    new PathUnitNew(spawnedUnit, AssignedPath.BROWN_MID)

        end))
        counter++



    i = 1
    while greenCountMid < brownCountMid - 2*i and i <= 3
        doAfter(counter*0.25, () -> (begin
            if not spawnStopped
                if barracksAliveTeam1[1]
                    unit spawnedUnit
                    spawnedUnit = spawnUnit(true, MILITIA, gg_rct_GreenSpawnMid.getCenter())
                    new PathUnitNew(spawnedUnit, AssignedPath.GREEN_MID)

        end))
        counter++
        i ++

    i = 1        
    while brownCountMid < greenCountMid - 2*i and i <= 3
        doAfter(counter*0.25, () -> (begin
            if not spawnStopped
                if barracksAliveTeam2[1]
                    unit spawnedUnit
                    spawnedUnit = spawnUnit(false, MILITIA_2, gg_rct_BrownSpawnMid.getCenter())
                    new PathUnitNew(spawnedUnit, AssignedPath.BROWN_MID)

        end))
        counter++
        i ++


    counter = 0
    for int unitId in botUnitsIds
        doAfter(counter*0.25, () -> (begin
            if not spawnStopped
                unit spawnedUnit
                if barracksAliveTeam1[2]
                    spawnedUnit = spawnUnit(true, unitId, gg_rct_GreenSpawnBot.getCenter())
                    new PathUnitNew(spawnedUnit, AssignedPath.GREEN_BOT)

        end))
        counter++

    counter = 0
    for int unitId in botUnitsIds2
        doAfter(counter*0.25, () -> (begin
            if not spawnStopped
                unit spawnedUnit
                if barracksAliveTeam2[2]
                    spawnedUnit = spawnUnit(false, unitId, gg_rct_BrownSpawnBot.getCenter())
                    new PathUnitNew(spawnedUnit, AssignedPath.BROWN_BOT)

        end))
        counter++

    
    i = 1
    while greenCountBot < brownCountBot - 2*i and i <= 3
        doAfter(counter*0.25, () -> (begin
            if not spawnStopped
                if barracksAliveTeam1[2]
                    unit spawnedUnit
                    spawnedUnit = spawnUnit(true, MILITIA, gg_rct_GreenSpawnBot.getCenter())
                    new PathUnitNew(spawnedUnit, AssignedPath.GREEN_BOT)
        end))
        counter++
        i ++

    i = 1
    while brownCountBot < greenCountBot - 2*i and i <= 3
        doAfter(counter*0.25, () -> (begin
            if not spawnStopped
                if barracksAliveTeam2[2]
                    unit spawnedUnit
                    spawnedUnit = spawnUnit(false, MILITIA_2, gg_rct_BrownSpawnBot.getCenter())
                    new PathUnitNew(spawnedUnit, AssignedPath.BROWN_BOT)

        end))
        counter++
        i ++


    doAfter(6, () -> (begin
        if not spawnStopped
            unit spawnedUnit
            if workshopAliveTeam1[0]
                spawnedUnit = spawnUnit(true, MORTAR_TEAM, gg_rct_GreenWorkShopTop.getCenter())
                new PathUnitNew(spawnedUnit, AssignedPath.GREEN_TOP)

            if workshopAliveTeam1[1]
                spawnedUnit = spawnUnit(true, MORTAR_TEAM, gg_rct_GreenWorkShopBot.getCenter())
                new PathUnitNew(spawnedUnit, AssignedPath.GREEN_BOT)

            if workshopAliveTeam2[0]
                spawnedUnit = spawnUnit(false, MORTAR_TEAM_2, gg_rct_BrownWorkShopTop.getCenter())
                new PathUnitNew(spawnedUnit, AssignedPath.BROWN_TOP)

            if workshopAliveTeam2[1]
                spawnedUnit = spawnUnit(false, MORTAR_TEAM_2, gg_rct_BrownWorkShopBot.getCenter())
                new PathUnitNew(spawnedUnit, AssignedPath.BROWN_BOT)
    end))
    

    
init
    setupSpawnUnits()