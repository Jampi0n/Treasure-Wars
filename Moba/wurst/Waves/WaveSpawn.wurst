package WaveSpawn

import ClosureTimers
import UnitTypeConfig
import PathUnit
import Path
import LinkedList
import BuildingTypes
import ErrorHandling
import General
import PlayerControl

constant real SPAWN_INTERVAL = 50
boolean spawnStarted = false

constant topUnits = new LinkedList<int>()
constant midUnits = new LinkedList<int>()
constant botUnits = new LinkedList<int>()

int topUnitsSize
int midUnitsSize
int botUnitsSize

public enum Lane
    TOP
    MID
    BOT


public int array laneUnitCountGreen
public int array laneUnitCountBrown

function Lane.toInt() returns int
    if this == Lane.TOP
        return 0
    if this == Lane.MID
        return 1
    if this == Lane.BOT
        return 2
    
    return -1

function setLaneUnitCount(Team t, Lane l, int count)
    if t == Team.TEAM1
        laneUnitCountGreen[l.toInt()] = count
    else if t == Team.TEAM2
        laneUnitCountBrown[l.toInt()] = count
    else
        error("Cannot set lane count for this team.")

function getLaneUnitCount(Team t, Lane l) returns int
    if t == Team.TEAM1
        return laneUnitCountGreen[l.toInt()]
    else if t == Team.TEAM2
        return laneUnitCountBrown[l.toInt()]
    else
        error("Cannot set lane count for this team.")
        return -1

public function addLaneUnitCount(Team t, Lane l, int count)
    setLaneUnitCount(t, l, getLaneUnitCount(t, l)+count)

public function startSpawning()
    if spawnStarted
        error("Spawning has already started.")
    else
        if DEBUG_MODE
            spawnWave()

        doPeriodically(SPAWN_INTERVAL, (CallbackPeriodic _) -> spawnWave())
        spawnStarted = true

public function spawnUnit( boolean firstTeam, int unitId, vec2 startPos) returns unit
    let spawnedUnit = createUnit(players[10 + (firstTeam ? 0 : 1)], unitId, firstTeam ? gg_rct_BrownCastle.getRightTop() : gg_rct_GreenCastle.getLeftBot() , angle(45. + (firstTeam ? 0 : 180) ))
        ..setPos(startPos)
    return spawnedUnit


function setupSpawnUnits()
    topUnits.add(FOOTMAN)
    topUnits.add(FOOTMAN)
    topUnits.add(FOOTMAN)
    topUnits.add(FOOTMAN)
    topUnits.add(RIFLEMAN)
    topUnits.add(RIFLEMAN)

    topUnitsSize = topUnits.size()

    midUnits.add(FOOTMAN)
    midUnits.add(FOOTMAN)
    midUnits.add(FOOTMAN)
    midUnits.add(KNIGHT)
    midUnits.add(KNIGHT)
    midUnits.add(RIFLEMAN)
    midUnits.add(RIFLEMAN)
    midUnits.add(RIFLEMAN)

    midUnitsSize = midUnits.size()

    botUnits.add(FOOTMAN)
    botUnits.add(FOOTMAN)
    botUnits.add(FOOTMAN)
    botUnits.add(FOOTMAN)
    botUnits.add(RIFLEMAN)
    botUnits.add(RIFLEMAN)

    botUnitsSize = botUnits.size()

function spawnWave()
    int counter

    int i

    /*unit spawnedMortar
    PathUnit pathMortar

    spawnedMortar = spawnUnit(true, MORTAR_TEAM, gg_rct_GreenSpawnTop.getCenter())
    pathMortar = new PathUnit(spawnedMortar)
    pathMortar.setPathFirst(GREEN_TOP)

    spawnedMortar = spawnUnit(true, MORTAR_TEAM, gg_rct_GreenSpawnMid.getCenter())
    pathMortar = new PathUnit(spawnedMortar)
    pathMortar.setPathFirst(GREEN_MID)

    spawnedMortar = spawnUnit(true, MORTAR_TEAM, gg_rct_GreenSpawnBot.getCenter())
    pathMortar = new PathUnit(spawnedMortar)
    pathMortar.setPathFirst(GREEN_BOT)*/

    let greenCountTop = getLaneUnitCount(Team.TEAM1, Lane.TOP)// + topUnitsSize
    let brownCountTop = getLaneUnitCount(Team.TEAM2, Lane.TOP)// + topUnitsSize

    let greenCountMid = getLaneUnitCount(Team.TEAM1, Lane.MID)// + midUnitsSize
    let brownCountMid = getLaneUnitCount(Team.TEAM2, Lane.MID)// + midUnitsSize

    let greenCountBot = getLaneUnitCount(Team.TEAM1, Lane.BOT)// + botUnitsSize
    let brownCountBot = getLaneUnitCount(Team.TEAM2, Lane.BOT)// + botUnitsSize

    //print(greenCountTop.toString()+","+greenCountMid.toString()+","+greenCountBot.toString()+" vs "+brownCountTop.toString()+","+brownCountMid.toString()+","+brownCountBot.toString())


    counter = 0
    for int unitId in topUnits
        doAfter(counter*0.25, () -> (begin
            
            unit spawnedUnit
            PathUnit pathUnit
            if greenBarracksAlive[0]
                spawnedUnit = spawnUnit(true, unitId, gg_rct_GreenSpawnTop.getCenter())
                pathUnit = new PathUnit(spawnedUnit)
                pathUnit.setPathFirst(GREEN_TOP)
                addLaneUnitCount(Team.TEAM1, Lane.TOP, 1)
            if brownBarracksAlive[0]
                spawnedUnit = spawnUnit(false, unitId, gg_rct_BrownSpawnTop.getCenter())
                pathUnit = new PathUnit(spawnedUnit)
                pathUnit.setPathFirst(BROWN_TOP)
                addLaneUnitCount(Team.TEAM2, Lane.TOP, 1)
        end))
        counter++



    i = 1
    while greenCountTop < brownCountTop - i
        doAfter(counter*0.25, () -> (begin
            if greenBarracksAlive[0]
                unit spawnedUnit
                PathUnit pathUnit
                spawnedUnit = spawnUnit(true, MILITIA, gg_rct_GreenSpawnTop.getCenter())
                pathUnit = new PathUnit(spawnedUnit)
                pathUnit.setPathFirst(GREEN_TOP)
                addLaneUnitCount(Team.TEAM1, Lane.TOP, 1)
        end))
        counter++
        i += 2

    
    i = 1
    while brownCountTop < greenCountTop - i
        doAfter(counter*0.25, () -> (begin
            if brownBarracksAlive[0]
                unit spawnedUnit
                PathUnit pathUnit
                spawnedUnit = spawnUnit(false, MILITIA, gg_rct_BrownSpawnTop.getCenter())
                pathUnit = new PathUnit(spawnedUnit)
                pathUnit.setPathFirst(BROWN_TOP)
                addLaneUnitCount(Team.TEAM2, Lane.TOP, 1)
        end))
        counter++
        i += 2




    counter = 0
    for int unitId in midUnits
        doAfter(counter*0.25, () -> (begin
            unit spawnedUnit
            PathUnit pathUnit
            if greenBarracksAlive[1]
                spawnedUnit = spawnUnit(true, unitId, gg_rct_GreenSpawnMid.getCenter())
                pathUnit = new PathUnit(spawnedUnit)
                pathUnit.setPathFirst(GREEN_MID)
                addLaneUnitCount(Team.TEAM1, Lane.MID, 1)
            if brownBarracksAlive[1]
                spawnedUnit = spawnUnit(false, unitId, gg_rct_BrownSpawnMid.getCenter())
                pathUnit = new PathUnit(spawnedUnit)
                pathUnit.setPathFirst(BROWN_MID)
                addLaneUnitCount(Team.TEAM2, Lane.MID, 1)
        end))
        counter++




    i = 1
    while greenCountMid < brownCountMid - i
        doAfter(counter*0.25, () -> (begin
            if greenBarracksAlive[1]
                unit spawnedUnit
                PathUnit pathUnit
                spawnedUnit = spawnUnit(true, MILITIA, gg_rct_GreenSpawnMid.getCenter())
                pathUnit = new PathUnit(spawnedUnit)
                pathUnit.setPathFirst(GREEN_MID)
                addLaneUnitCount(Team.TEAM1, Lane.MID, 1)
        end))
        counter++
        i += 2

    i = 1        
    while brownCountMid < greenCountMid - i
        doAfter(counter*0.25, () -> (begin
            if brownBarracksAlive[1]
                unit spawnedUnit
                PathUnit pathUnit
                spawnedUnit = spawnUnit(false, MILITIA, gg_rct_BrownSpawnMid.getCenter())
                pathUnit = new PathUnit(spawnedUnit)
                pathUnit.setPathFirst(BROWN_MID)
                addLaneUnitCount(Team.TEAM2, Lane.MID, 1)
        end))
        counter++
        i += 2


    counter = 0
    for int unitId in botUnits
        doAfter(counter*0.25, () -> (begin
            unit spawnedUnit
            PathUnit pathUnit
            if greenBarracksAlive[2]
                spawnedUnit = spawnUnit(true, unitId, gg_rct_GreenSpawnBot.getCenter())
                pathUnit = new PathUnit(spawnedUnit)
                pathUnit.setPathFirst(GREEN_BOT)
                addLaneUnitCount(Team.TEAM1, Lane.BOT, 1)
            if brownBarracksAlive[2]
                spawnedUnit = spawnUnit(false, unitId, gg_rct_BrownSpawnBot.getCenter())
                pathUnit = new PathUnit(spawnedUnit)
                pathUnit.setPathFirst(BROWN_BOT)
                addLaneUnitCount(Team.TEAM2, Lane.BOT, 1)
        end))
        counter++



    
    i = 1
    while greenCountBot < brownCountBot - i
        doAfter(counter*0.25, () -> (begin
            if greenBarracksAlive[2]
                unit spawnedUnit
                PathUnit pathUnit
                spawnedUnit = spawnUnit(true, MILITIA, gg_rct_GreenSpawnBot.getCenter())
                pathUnit = new PathUnit(spawnedUnit)
                pathUnit.setPathFirst(GREEN_BOT)
                addLaneUnitCount(Team.TEAM1, Lane.BOT, 1)
        end))
        counter++
        i += 2

    i = 1
    while brownCountBot < greenCountBot - i
        doAfter(counter*0.25, () -> (begin
            if brownBarracksAlive[2]
                unit spawnedUnit
                PathUnit pathUnit
                spawnedUnit = spawnUnit(false, MILITIA, gg_rct_BrownSpawnBot.getCenter())
                pathUnit = new PathUnit(spawnedUnit)
                pathUnit.setPathFirst(BROWN_BOT)
                addLaneUnitCount(Team.TEAM2, Lane.BOT, 1)
        end))
        counter++
        i += 2


    doAfter(6, () -> (begin
        unit spawnedUnit
        PathUnit pathUnit
        if greenWorkshopAlive[0]
            spawnedUnit = spawnUnit(true, MORTAR_TEAM, gg_rct_GreenWorkShopTop.getCenter())
            pathUnit = new PathUnit(spawnedUnit)
            pathUnit.setPathFirst(GREEN_TOP)
            addLaneUnitCount(Team.TEAM1, Lane.TOP, 1)
        if greenWorkshopAlive[1]
            spawnedUnit = spawnUnit(true, MORTAR_TEAM, gg_rct_GreenWorkShopBot.getCenter())
            pathUnit = new PathUnit(spawnedUnit)
            pathUnit.setPathFirst(GREEN_BOT)
            addLaneUnitCount(Team.TEAM1, Lane.BOT, 1)

        if brownWorkshopAlive[0]
            spawnedUnit = spawnUnit(false, MORTAR_TEAM, gg_rct_BrownWorkShopTop.getCenter())
            pathUnit = new PathUnit(spawnedUnit)
            pathUnit.setPathFirst(BROWN_TOP)
            addLaneUnitCount(Team.TEAM2, Lane.TOP, 1)
        if brownWorkshopAlive[1]
            spawnedUnit = spawnUnit(false, MORTAR_TEAM, gg_rct_BrownWorkShopBot.getCenter())
            pathUnit = new PathUnit(spawnedUnit)
            pathUnit.setPathFirst(BROWN_BOT)
            addLaneUnitCount(Team.TEAM2, Lane.BOT, 1)
    end))
    

    
init
    setupSpawnUnits()