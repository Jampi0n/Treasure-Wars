package WaveSpawn

import ClosureTimers
import UnitTypeConfig
import PathUnit
import Path
import LinkedList
import BuildingTypes
import ErrorHandling
import General
import PlayerControl
import HashSet

constant real SPAWN_INTERVAL = 50
boolean spawnStarted = false
boolean spawnStopped = false

constant topUnitIds = new LinkedList<int>()
constant midUnitsIds = new LinkedList<int>()
constant botUnitsIds = new LinkedList<int>()

public constant team1Units = new HashSet<unit>()
public constant team2Units = new HashSet<unit>()

int topUnitIdsSize
int midUnitsIdsSize
int botUnitsIdsSize

public int array laneUnitCountTeam1
public int array laneUnitCountTeam2

function Lane.toInt() returns int
    if this == Lane.TOP
        return 0
    if this == Lane.MID
        return 1
    if this == Lane.BOT
        return 2
    
    return -1

function setLaneUnitCount(Team t, Lane l, int count)
    if t == Team.TEAM1
        laneUnitCountTeam1[l.toInt()] = count
    else if t == Team.TEAM2
        laneUnitCountTeam2[l.toInt()] = count
    else
        error("Cannot set lane count for this team.")

function getLaneUnitCount(Team t, Lane l) returns int
    if t == Team.TEAM1
        return laneUnitCountTeam1[l.toInt()]
    else if t == Team.TEAM2
        return laneUnitCountTeam2[l.toInt()]
    else
        error("Cannot set lane count for this team.")
        return -1

public function addLaneUnitCount(Team t, Lane l, int count)
    setLaneUnitCount(t, l, getLaneUnitCount(t, l)+count)

public function startSpawning()
    if spawnStarted
        error("Spawning has already started.")
    else
        if DEBUG_MODE
            spawnWave()

        doPeriodically(SPAWN_INTERVAL, (CallbackPeriodic cb) -> (begin
            if spawnStopped
                destroy cb
            else
                spawnWave()
        end))
        spawnStarted = true

public function stopSpawning()
    spawnStopped = true

public function spawnUnit( boolean firstTeam, int unitId, vec2 startPos) returns unit
    let spawnedUnit = createUnit(players[firstTeam ? TEAM_PLAYER_TEAM_1 : TEAM_PLAYER_TEAM_2], unitId, firstTeam ? gg_rct_BrownCastle.getRightTop() : gg_rct_GreenCastle.getLeftBot() , angle(45. + (firstTeam ? 0 : 180) ))
        ..setPos(startPos)
    return spawnedUnit


function setupSpawnUnits()
    topUnitIds.add(FOOTMAN)
    topUnitIds.add(FOOTMAN)
    topUnitIds.add(FOOTMAN)
    topUnitIds.add(FOOTMAN)
    topUnitIds.add(RIFLEMAN)
    topUnitIds.add(RIFLEMAN)

    topUnitIdsSize = topUnitIds.size()

    midUnitsIds.add(FOOTMAN)
    midUnitsIds.add(FOOTMAN)
    midUnitsIds.add(FOOTMAN)
    midUnitsIds.add(KNIGHT)
    midUnitsIds.add(KNIGHT)
    midUnitsIds.add(RIFLEMAN)
    midUnitsIds.add(RIFLEMAN)
    midUnitsIds.add(RIFLEMAN)

    midUnitsIdsSize = midUnitsIds.size()

    botUnitsIds.add(FOOTMAN)
    botUnitsIds.add(FOOTMAN)
    botUnitsIds.add(FOOTMAN)
    botUnitsIds.add(FOOTMAN)
    botUnitsIds.add(RIFLEMAN)
    botUnitsIds.add(RIFLEMAN)

    botUnitsIdsSize = botUnitsIds.size()

function spawnWave()

    if spawnStopped
        return

    int counter

    int i

    /*unit spawnedMortar
    PathUnit pathMortar

    spawnedMortar = spawnUnit(true, MORTAR_TEAM, gg_rct_GreenSpawnTop.getCenter())
    pathMortar = new PathUnit(spawnedMortar)
    pathMortar.setPathFirst(GREEN_TOP)

    spawnedMortar = spawnUnit(true, MORTAR_TEAM, gg_rct_GreenSpawnMid.getCenter())
    pathMortar = new PathUnit(spawnedMortar)
    pathMortar.setPathFirst(GREEN_MID)

    spawnedMortar = spawnUnit(true, MORTAR_TEAM, gg_rct_GreenSpawnBot.getCenter())
    pathMortar = new PathUnit(spawnedMortar)
    pathMortar.setPathFirst(GREEN_BOT)*/

    let greenCountTop = getLaneUnitCount(Team.TEAM1, Lane.TOP)// + topUnitIdsSize
    let brownCountTop = getLaneUnitCount(Team.TEAM2, Lane.TOP)// + topUnitIdsSize

    let greenCountMid = getLaneUnitCount(Team.TEAM1, Lane.MID)// + midUnitsIdsSize
    let brownCountMid = getLaneUnitCount(Team.TEAM2, Lane.MID)// + midUnitsIdsSize

    let greenCountBot = getLaneUnitCount(Team.TEAM1, Lane.BOT)// + botUnitsIdsSize
    let brownCountBot = getLaneUnitCount(Team.TEAM2, Lane.BOT)// + botUnitsIdsSize

    //print(greenCountTop.toString()+","+greenCountMid.toString()+","+greenCountBot.toString()+" vs "+brownCountTop.toString()+","+brownCountMid.toString()+","+brownCountBot.toString())

    income()

    counter = 0
    for int unitId in topUnitIds
        doAfter(counter*0.25, () -> (begin
            if not spawnStopped
                unit spawnedUnit
                PathUnit pathUnit
                if barracksAliveTeam1[0]
                    spawnedUnit = spawnUnit(true, unitId, gg_rct_GreenSpawnTop.getCenter())
                    pathUnit = new PathUnit(spawnedUnit)
                    pathUnit.setPathFirst(GREEN_TOP)
                    addLaneUnitCount(Team.TEAM1, Lane.TOP, 1)
                    team1Units.add(spawnedUnit)
                if barracksAliveTeam2[0]
                    spawnedUnit = spawnUnit(false, unitId, gg_rct_BrownSpawnTop.getCenter())
                    pathUnit = new PathUnit(spawnedUnit)
                    pathUnit.setPathFirst(BROWN_TOP)
                    addLaneUnitCount(Team.TEAM2, Lane.TOP, 1)
                    team2Units.add(spawnedUnit)
        end))
        counter++



    i = 1
    while greenCountTop < brownCountTop - i
        doAfter(counter*0.25, () -> (begin
            if not spawnStopped
                if barracksAliveTeam1[0]
                    unit spawnedUnit
                    PathUnit pathUnit
                    spawnedUnit = spawnUnit(true, MILITIA, gg_rct_GreenSpawnTop.getCenter())
                    pathUnit = new PathUnit(spawnedUnit)
                    pathUnit.setPathFirst(GREEN_TOP)
                    addLaneUnitCount(Team.TEAM1, Lane.TOP, 1)
                    team1Units.add(spawnedUnit)
        end))
        counter++
        i += 2

    
    i = 1
    while brownCountTop < greenCountTop - i
        doAfter(counter*0.25, () -> (begin
            if not spawnStopped
                if barracksAliveTeam2[0]
                    unit spawnedUnit
                    PathUnit pathUnit
                    spawnedUnit = spawnUnit(false, MILITIA, gg_rct_BrownSpawnTop.getCenter())
                    pathUnit = new PathUnit(spawnedUnit)
                    pathUnit.setPathFirst(BROWN_TOP)
                    addLaneUnitCount(Team.TEAM2, Lane.TOP, 1)
                    team2Units.add(spawnedUnit)
        end))
        counter++
        i += 2




    counter = 0
    for int unitId in midUnitsIds
        doAfter(counter*0.25, () -> (begin
            if not spawnStopped
                unit spawnedUnit
                PathUnit pathUnit
                if barracksAliveTeam1[1]
                    spawnedUnit = spawnUnit(true, unitId, gg_rct_GreenSpawnMid.getCenter())
                    pathUnit = new PathUnit(spawnedUnit)
                    pathUnit.setPathFirst(GREEN_MID)
                    addLaneUnitCount(Team.TEAM1, Lane.MID, 1)
                    team1Units.add(spawnedUnit)
                if barracksAliveTeam2[1]
                    spawnedUnit = spawnUnit(false, unitId, gg_rct_BrownSpawnMid.getCenter())
                    pathUnit = new PathUnit(spawnedUnit)
                    pathUnit.setPathFirst(BROWN_MID)
                    addLaneUnitCount(Team.TEAM2, Lane.MID, 1)
                    team2Units.add(spawnedUnit)
        end))
        counter++




    i = 1
    while greenCountMid < brownCountMid - i
        doAfter(counter*0.25, () -> (begin
            if not spawnStopped
                if barracksAliveTeam1[1]
                    unit spawnedUnit
                    PathUnit pathUnit
                    spawnedUnit = spawnUnit(true, MILITIA, gg_rct_GreenSpawnMid.getCenter())
                    pathUnit = new PathUnit(spawnedUnit)
                    pathUnit.setPathFirst(GREEN_MID)
                    addLaneUnitCount(Team.TEAM1, Lane.MID, 1)
                    team1Units.add(spawnedUnit)
        end))
        counter++
        i += 2

    i = 1        
    while brownCountMid < greenCountMid - i
        doAfter(counter*0.25, () -> (begin
            if not spawnStopped
                if barracksAliveTeam2[1]
                    unit spawnedUnit
                    PathUnit pathUnit
                    spawnedUnit = spawnUnit(false, MILITIA, gg_rct_BrownSpawnMid.getCenter())
                    pathUnit = new PathUnit(spawnedUnit)
                    pathUnit.setPathFirst(BROWN_MID)
                    addLaneUnitCount(Team.TEAM2, Lane.MID, 1)
                    team2Units.add(spawnedUnit)
        end))
        counter++
        i += 2


    counter = 0
    for int unitId in botUnitsIds
        doAfter(counter*0.25, () -> (begin
            if not spawnStopped
                unit spawnedUnit
                PathUnit pathUnit
                if barracksAliveTeam1[2]
                    spawnedUnit = spawnUnit(true, unitId, gg_rct_GreenSpawnBot.getCenter())
                    pathUnit = new PathUnit(spawnedUnit)
                    pathUnit.setPathFirst(GREEN_BOT)
                    addLaneUnitCount(Team.TEAM1, Lane.BOT, 1)
                    team1Units.add(spawnedUnit)
                if barracksAliveTeam2[2]
                    spawnedUnit = spawnUnit(false, unitId, gg_rct_BrownSpawnBot.getCenter())
                    pathUnit = new PathUnit(spawnedUnit)
                    pathUnit.setPathFirst(BROWN_BOT)
                    addLaneUnitCount(Team.TEAM2, Lane.BOT, 1)
                    team2Units.add(spawnedUnit)
        end))
        counter++



    
    i = 1
    while greenCountBot < brownCountBot - i
        doAfter(counter*0.25, () -> (begin
            if not spawnStopped
                if barracksAliveTeam1[2]
                    unit spawnedUnit
                    PathUnit pathUnit
                    spawnedUnit = spawnUnit(true, MILITIA, gg_rct_GreenSpawnBot.getCenter())
                    pathUnit = new PathUnit(spawnedUnit)
                    pathUnit.setPathFirst(GREEN_BOT)
                    addLaneUnitCount(Team.TEAM1, Lane.BOT, 1)
                    team1Units.add(spawnedUnit)
        end))
        counter++
        i += 2

    i = 1
    while brownCountBot < greenCountBot - i
        doAfter(counter*0.25, () -> (begin
            if not spawnStopped
                if barracksAliveTeam2[2]
                    unit spawnedUnit
                    PathUnit pathUnit
                    spawnedUnit = spawnUnit(false, MILITIA, gg_rct_BrownSpawnBot.getCenter())
                    pathUnit = new PathUnit(spawnedUnit)
                    pathUnit.setPathFirst(BROWN_BOT)
                    addLaneUnitCount(Team.TEAM2, Lane.BOT, 1)
                    team2Units.add(spawnedUnit)
        end))
        counter++
        i += 2


    doAfter(6, () -> (begin
        if not spawnStopped
            unit spawnedUnit
            PathUnit pathUnit
            if workshopAliveTeam1[0]
                spawnedUnit = spawnUnit(true, MORTAR_TEAM, gg_rct_GreenWorkShopTop.getCenter())
                pathUnit = new PathUnit(spawnedUnit)
                pathUnit.setPathFirst(GREEN_TOP)
                addLaneUnitCount(Team.TEAM1, Lane.TOP, 1)
                team1Units.add(spawnedUnit)
            if workshopAliveTeam1[1]
                spawnedUnit = spawnUnit(true, MORTAR_TEAM, gg_rct_GreenWorkShopBot.getCenter())
                pathUnit = new PathUnit(spawnedUnit)
                pathUnit.setPathFirst(GREEN_BOT)
                addLaneUnitCount(Team.TEAM1, Lane.BOT, 1)
                team1Units.add(spawnedUnit)

            if workshopAliveTeam2[0]
                spawnedUnit = spawnUnit(false, MORTAR_TEAM, gg_rct_BrownWorkShopTop.getCenter())
                pathUnit = new PathUnit(spawnedUnit)
                pathUnit.setPathFirst(BROWN_TOP)
                addLaneUnitCount(Team.TEAM2, Lane.TOP, 1)
                team2Units.add(spawnedUnit)
            if workshopAliveTeam2[1]
                spawnedUnit = spawnUnit(false, MORTAR_TEAM, gg_rct_BrownWorkShopBot.getCenter())
                pathUnit = new PathUnit(spawnedUnit)
                pathUnit.setPathFirst(BROWN_BOT)
                addLaneUnitCount(Team.TEAM2, Lane.BOT, 1)
                team2Units.add(spawnedUnit)
    end))
    

    
init
    setupSpawnUnits()