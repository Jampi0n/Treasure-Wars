package PickHero
import TimerUtils
import PlayerControl
import HeroControl
import HeroType
import ClosureTimers
import Gameplay
import HashMap

public PickMode pickMode
timer chooseModeTimer
timer pickTimer
timerdialog timerWindow
trigger chooseModeTrigger
trigger onPickTrigger
region pickRegion

unit array tavern
unit array patron
fogmodifier array tavernVision

HeroType array remainingHeroTypes
int remainingHeroTypesCount
constant heroTypeIndex = new HashMap<HeroType, int>()

enum PickMode
    UNDECIDED
    ALLRANDOM
    ALLPICK
    //...
    /*
ban, reverse pick, same heroes
    */


function setupCreatedHero(Hero hero)
    player owner = hero.toUnit().getOwner()
    CPlayer cPlayer = owner.getCPlayer()
    if DEBUG_MODE
        owner.setGold(5000)
        SetHeroLevel(hero.toUnit(), 25, true)
    else
        owner.setGold(500)
        
    vec2 pos = gg_rct_CenterMid.getCenter()
    patron[owner.getId()].remove()

    if(cPlayer.getTeam()==Team.TEAM1)
        if not DEBUG_MODE
            pos = gg_rct_GreenCastle.getCenter()
    else
        if not DEBUG_MODE
            pos = gg_rct_BrownCastle.getCenter()
       
    
    hero.toUnit().setPos(pos)
    PanCameraTo(pos.x, pos.y)

//creates a random hero for a player
function createRandomHero(CPlayer cPlayer)
    var random = GetRandomInt(0, remainingHeroTypesCount-1)

    Hero hero = new Hero(cPlayer, remainingHeroTypes[random].getUnitId() , gg_rct_CenterMid.getCenter(), angle(0))
    setupCreatedHero(hero)



    for i = 0 to 11
        if(getCPlayer(i).getPlayerType()==PlayerType.HERO)
            SetPlayerTechMaxAllowed(players[i],  remainingHeroTypes[random].getUnitId(), 0)


    heroTypeIndex.put(remainingHeroTypes[random], heroTypeIndex.get(remainingHeroTypes[remainingHeroTypesCount-1]))
    heroTypeIndex.remove(remainingHeroTypes[remainingHeroTypesCount-1])

    remainingHeroTypes[random] = remainingHeroTypes[remainingHeroTypesCount-1]
    remainingHeroTypes[remainingHeroTypesCount-1]=null
    remainingHeroTypesCount--



function removeHeroType(HeroType herotype)
    let index = heroTypeIndex.get(herotype)

    heroTypeIndex.put(remainingHeroTypes[index], heroTypeIndex.get(remainingHeroTypes[remainingHeroTypesCount-1]))
    heroTypeIndex.remove(remainingHeroTypes[remainingHeroTypesCount-1])

    remainingHeroTypes[index] = remainingHeroTypes[remainingHeroTypesCount-1]
    remainingHeroTypes[remainingHeroTypesCount-1]=null
    remainingHeroTypesCount--

    for i = 0 to 9
        if(getCPlayer(i).getPlayerType()==PlayerType.HERO)
            SetPlayerTechMaxAllowed(players[i], herotype.getUnitId(), 0)
        


function allRandom()
    for i = 0 to 11
        if(getCPlayer(i).getPlayerType()==PlayerType.HERO)
            createRandomHero(getCPlayer(i))

    allHeroesPicked()

function allPick()

    tavern[0] = createUnit(players[15], 'n002', gg_rct_Tavern0.getCenter(), angle(0) )
    tavern[0].setColor(PLAYER_COLOR_RED)
    tavern[1] = createUnit(players[15], 'n003', gg_rct_Tavern1.getCenter(), angle(0) )
    tavern[1].setColor(PLAYER_COLOR_BLUE)
    tavern[2] = createUnit(players[15], 'n004', gg_rct_Tavern2.getCenter(), angle(0) )
    tavern[2].setColor(PLAYER_COLOR_YELLOW)
    tavern[3] = createUnit(players[15], 'n005', gg_rct_Tavern3.getCenter(), angle(0) )
    tavern[3].setColor(PLAYER_COLOR_GREEN)
    for i = 0 to 11
        if(getCPlayer(i).getPlayerType()==PlayerType.HERO)
            patron[i] = createUnit(players[i], 'n006', gg_rct_CenterMid.getCenter(), angle(0))
            tavernVision[i] = CreateFogModifierRadius(players[i], FOG_OF_WAR_VISIBLE,
                                gg_rct_CenterMid.getCenterX(),  gg_rct_CenterMid.getCenterX(), 900, true, false)
            FogModifierStart(tavernVision[i])


   

    pickRegion = CreateRegion()
        ..addRect(bj_mapInitialPlayableArea)
    onPickTrigger = CreateTrigger()
        ..addAction(function onPick)
        ..registerEnterRegion(pickRegion, null)

    let pickTime = DEBUG_MODE?10.:30.

    pickTimer = getTimer()
        ..start(pickTime, function allPickEnd)

    timerWindow = CreateTimerDialog(pickTimer)
    TimerDialogSetTitle(timerWindow,"Pick hero:")
    TimerDialogDisplay(timerWindow, true)

function onPick()
    unit pickedUnit = GetTriggerUnit()
    CPlayer cPlayer = pickedUnit.getOwner().getCPlayer()
    if(cPlayer.getPlayerType()==PlayerType.HERO)
        if(Hero.getHero(cPlayer)==null)
            if HeroType.getHeroType(pickedUnit.getTypeId()) != null
                Hero hero = new Hero(pickedUnit)
                setupCreatedHero(hero)

                removeHeroType(hero.getHeroType())

function allPickEnd()
    DestroyTimerDialog(timerWindow)
    pickTimer.release()
    timerWindow = null
    pickRegion.destr()
    for i = 0 to 3
        tavern[i].remove()
        tavern[i]=null
    for i = 0 to 11
        if(getCPlayer(i).getPlayerType()==PlayerType.HERO)
            patron[i].remove()
            patron[i]=null
            if(Hero.getHero(getCPlayer(i))==null)
                if(GetLocalPlayer()==players[i])
                    print("|cffffcc00You have not picked a hero in time. You will get a random one.")
                createRandomHero(getCPlayer(i))

            FogModifierStop(tavernVision[i])
            DestroyFogModifier(tavernVision[i])

    onPickTrigger
        ..clearActions()
        ..destr()

    allHeroesPicked()



function endPickMode()
    
    DestroyTimerDialog(timerWindow)
    chooseModeTimer.release()

    if(pickMode == PickMode.ALLPICK)
        print("|cffffcc00All Pick was chosen. You have 30 seconds to pick a Hero!|r")
        allPick()
    if(pickMode == PickMode.ALLRANDOM)
        print("|cffffcc00All Random was chosen. Heroes will be random!|r")
        allRandom()
    if(pickMode == PickMode.UNDECIDED)
        print("|cffffcc00No mode was chosen. Heroes will be random!|r")
        pickMode = PickMode.ALLRANDOM
        allRandom()

    chooseModeTrigger
        ..clearActions()
        ..destr()

function onModePick()
    string s = GetEventPlayerChatString()
    if(s=="-ap")
        pickMode = PickMode.ALLPICK
    else
        pickMode = PickMode.ALLRANDOM

    endPickMode()

function startPickMode()
    //copies the array of hero types
    remainingHeroTypesCount = HeroType.heroTypeCount

    for i = 0 to remainingHeroTypesCount-1
        remainingHeroTypes[i] = HeroType.heroTypes[i]
        heroTypeIndex.put(HeroType.heroTypes[i], i)

    PanCameraToTimed(gg_rct_CenterMid.getCenterX(), gg_rct_CenterMid.getCenterY(), 0)
    

    pickMode = PickMode.UNDECIDED
    chooseModeTrigger = CreateTrigger()
        ..registerPlayerChatEvent(players[adminPlayer], "-ap", true)
        ..registerPlayerChatEvent(players[adminPlayer], "-ar", true)
        ..addAction(function onModePick)
    
    chooseModeTimer= getTimer()
        ..start(30, function endPickMode)

    timerWindow = CreateTimerDialog(chooseModeTimer)
    TimerDialogSetTitle(timerWindow,"Choose pick mode:")
    TimerDialogDisplay(timerWindow, true)

    print("|cffffcc00"+players[adminPlayer].getName()+" has 30 seconds to pick a mode!|r")

init
    doAfter(0, ()-> startPickMode())

    // DEBUG_MODE automatically chooses all pick
    if DEBUG_MODE
        doAfter(0.1, () -> (begin
            pickMode = PickMode.ALLPICK
            endPickMode()
        end))

    // you can spawn new heroes in DEBUG_MODE
    if DEBUG_MODE
        CreateTrigger()
            ..registerPlayerChatEvent(players[0], "hero ", false)
            ..addAction(() -> (begin
                let i = GetEventPlayerChatString().substring(5).toInt()
                createRandomHero(getCPlayer(i))

                SetPlayerAlliance(players[i], players[0], ALLIANCE_SHARED_VISION, true)
                SetPlayerAlliance(players[i], players[0], ALLIANCE_SHARED_CONTROL, true)
                SetPlayerAlliance(players[0], players[i], ALLIANCE_SHARED_CONTROL, true)
                SetPlayerAlliance(players[i], players[0], ALLIANCE_SHARED_ADVANCED_CONTROL, true)
            end))
    