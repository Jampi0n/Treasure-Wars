package BuildingTypes

import StandardTextTags
import PlayerControl
import ClosureTimers
import initlater WaveSpawn
import initlater UnitTypeConfig
import PathUnit
import Path
import General
import BuffTypeConfig
import UnitWrapper
import ErrorHandling
import HeroControl

constant integer ALTAR = 'h002'
constant integer ARCANE_SANCTUM = 'h008'
constant integer ARCANE_VAULT = 'h005'
constant integer BARRACKS = 'h003'
constant integer BASE_TOWER = 'h009'
constant integer BLACKSMITH = 'h004'
constant integer CASTLE = 'h001'
constant integer FARM = 'h007'
constant integer OUTER_TOWER = 'h016'
constant integer GATE_TOWER = 'h006'
constant integer HERO_TOWER = 'h000'
constant integer WORKSHOP = 'h00A'
constant int WORKSHOP_REBUILD = 'h01A'

public boolean array barracksAliveTeam1 = [true, true, true]
public boolean array barracksAliveTeam2 = [true, true, true]

public boolean array workshopAliveTeam1 = [true, true]
public boolean array workshopAliveTeam2 = [true, true]

constant real BARRACKS_REBUILD_TIME = 180
constant real WORKSHOP_REBUILD_TIME = 60

constant int SHOP_SHARING = 'Aall'


enum VictoryState
    UNDECIDED
    WIN_TEAM1
    WIN_TEAM2

VictoryState victoryState


int birth = 0
group militiaTeam1 = CreateGroup()
group militiaTeam2 = CreateGroup()
boolean removeMilitaTeam1 = true
boolean removeMilitaTeam2 = true


function setVictoryState(VictoryState newState)
    victoryState = newState

    if newState != VictoryState.UNDECIDED
        gameOver = true

        //stops heroes from reviving
        for i = 0 to MAX_HERO_COUNT-1
            let hero = Hero.getHero(i)
            if hero != null
                hero.destroyTimer()


        let g = CreateGroup()
        for i = 0 to bj_MAX_PLAYER_SLOTS-1
            GroupEnumUnitsOfPlayer(g, players[i], null)
            unit u
            while true
                u = FirstOfGroup(g)
                if u == null
                    break
                g.removeUnit(u)
                u.pause()

        g.destr()
                 
        boolean winTeam1
        string teamName
        if newState == VictoryState.WIN_TEAM1
            teamName = Player(TEAM_PLAYER_TEAM_1).getFullColoredName()
            winTeam1 = true
        else
            teamName = Player(TEAM_PLAYER_TEAM_2).getFullColoredName()
            winTeam1 = false


        printTimed("Team "+teamName+" has destroyed the enemy castle and wins the game!", 60)

        ScoreTable.extendToStatTable()

        if false
            doAfter(5, -> (begin
                let winList = CPlayer.getAllyHeroPlayers(winTeam1 ? players[TEAM_PLAYER_TEAM_1] : players[TEAM_PLAYER_TEAM_2] ) 
                let defeatList = CPlayer.getAllyHeroPlayers(winTeam1 ? players[TEAM_PLAYER_TEAM_2] : players[TEAM_PLAYER_TEAM_1] )

                for CPlayer p in winList
                    CustomVictoryBJ( p.getPlayer() , false, true )

                for CPlayer p in defeatList
                    CustomDefeatBJ( p.getPlayer(), "Your team's castle has been destroyed." )
            end))


        


function onBuildingDeath()
    let building = GetTriggerUnit()
    if not building.isType(UNIT_TYPE_STRUCTURE)
        return

    let unitId = building.getTypeId()
    let killer = GetKillingUnit().getOwner()

    int bounty = 0
    int globalBounty = 0

    if unitId == FARM
        bounty = 50
        globalBounty = 50

    else if unitId == OUTER_TOWER
        bounty = 75
        globalBounty = 75

    else if unitId == GATE_TOWER
        bounty = 100
        globalBounty = 100

    else if unitId == BASE_TOWER
        bounty = 100
        globalBounty = 100

    else if unitId == BARRACKS
        bounty = 250
        globalBounty = 250

        let newBuilding = createUnit(building.getOwner(), unitId, building.getPos(), (270).fromDeg())
            ..setAnimation("birth")
            ..setTimeScale(60/BARRACKS_REBUILD_TIME)
        UnitAddType(newBuilding, UNIT_TYPE_ANCIENT)
        

        for i=0 to 2
            
            if(building==udg_GreenBarracks[i])
                udg_GreenBarracks[i] = newBuilding
                barracksAliveTeam1[i] = false
                doAfter(BARRACKS_REBUILD_TIME, () -> (begin
                    newBuilding
                        ..setAnimation("stand")
                        ..setTimeScale(1)
                    barracksAliveTeam1[i] = true
                    UnitRemoveType(newBuilding, UNIT_TYPE_ANCIENT)
                end))
            else if(building==udg_BrownBarracks[i])
                udg_BrownBarracks[i] = newBuilding
                barracksAliveTeam2[i] = false
                doAfter(BARRACKS_REBUILD_TIME, () -> (begin
                    newBuilding
                        ..setAnimation("stand")
                        ..setTimeScale(1)
                    barracksAliveTeam2[i] = true
                    UnitRemoveType(newBuilding, UNIT_TYPE_ANCIENT)
                end))

    else if unitId == WORKSHOP
        bounty = 150
        globalBounty = 150

        let newBuilding = createUnit(building.getOwner(), WORKSHOP_REBUILD, building.getPos(), (270).fromDeg())
            ..setAnimation("birth")
            ..setTimeScale(0)
        UnitAddType(newBuilding, UNIT_TYPE_ANCIENT)

        for i=0 to 1
            if(building==udg_GreenWorkShop[i])
                udg_GreenWorkShop[i] = newBuilding
                workshopAliveTeam1[i] = false

            else if(building==udg_BrownWorkShop[i])
                workshopAliveTeam2[i] = false
                udg_BrownWorkShop[i] = newBuilding


    else if unitId == ARCANE_VAULT
        bounty = 100
        globalBounty = 100

    else if unitId == BLACKSMITH
        bounty = 150
        globalBounty = 150

    else if unitId == CASTLE
        bounty = 1000
        globalBounty = 1000

        if victoryState == VictoryState.UNDECIDED
            if building.getOwner() == players[TEAM_PLAYER_TEAM_1]
                setVictoryState(VictoryState.WIN_TEAM2)
            else if building.getOwner() == players[TEAM_PLAYER_TEAM_2]
                setVictoryState(VictoryState.WIN_TEAM1)
            else
                error("Castle killed for player "+building.getOwner().getId().toString())
        
    if bounty + globalBounty > 0
        let team = building.getOwner().getCPlayer().getTeam()

        if killer.getCPlayer().getTeam() == CPlayer.invertTeam(team)
            killer.getCPlayer().addGoldEx(bounty + globalBounty)
            killer.getCPlayer().statBuildingsRazed++
            createGoldBountyTextTag(building, bounty + globalBounty, killer)

        
        for CPlayer cp in CPlayer.getEnemyHeroPlayers(team)
            let p = cp.getPlayer()
            if cp.getTeam() == CPlayer.invertTeam(team) and p!=killer
                cp.addGoldEx(globalBounty)
                createGoldBountyTextTag(building, globalBounty, p)



function onBuildingAbility()
    let itemTypeId = GetSoldItem().getTypeId()
    let building = GetTriggerUnit()
    let hero = GetBuyingUnit()
    if itemTypeId == 'I000' //Rebuild Workshop
        building.removeAbility(SHOP_SHARING)
        building.setTimeScale(60/WORKSHOP_REBUILD_TIME)
        doAfter(BARRACKS_REBUILD_TIME, () -> (begin
            UnitRemoveType(building, UNIT_TYPE_ANCIENT)
            for i = 0 to 1
                if building == udg_BrownWorkShop[i]
                    workshopAliveTeam2[i] = true
                    let owner = building.getOwner()
                    let pos = building.getPos()
                    building.remove()
                    udg_BrownWorkShop[i] = createUnit(owner, WORKSHOP, pos, (270).fromDeg())
                    break
                if building == udg_GreenWorkShop[i]
                    workshopAliveTeam1[i] = true
                    let owner = building.getOwner()
                    let pos = building.getPos()
                    building.remove()
                    udg_BrownWorkShop[i] = createUnit(owner, WORKSHOP, pos, (270).fromDeg())
                    break
        end))
    else if itemTypeId == 'I001' //Siege Engine
        if building == udg_GreenWorkShop[0]
            let spawnedUnit = spawnUnit(true, TANK, gg_rct_GreenWorkShopTop.getCenter())
            let pathUnit = new PathUnit(spawnedUnit)
            pathUnit.setPathFirst(GREEN_TOP)
            addLaneUnitCount(Team.TEAM1, Lane.TOP, 1)
        else if building == udg_GreenWorkShop[1]
            let spawnedUnit = spawnUnit(true, TANK, gg_rct_GreenWorkShopBot.getCenter())
            let pathUnit = new PathUnit(spawnedUnit)
            pathUnit.setPathFirst(GREEN_BOT)
            addLaneUnitCount(Team.TEAM1, Lane.BOT, 1)
        else if building == udg_BrownWorkShop[0]
            let spawnedUnit = spawnUnit(false, TANK, gg_rct_BrownWorkShopTop.getCenter())
            let pathUnit = new PathUnit(spawnedUnit)
            pathUnit.setPathFirst(BROWN_TOP)
            addLaneUnitCount(Team.TEAM2, Lane.TOP, 1)
        else if building == udg_BrownWorkShop[1]
            let spawnedUnit = spawnUnit(false, TANK, gg_rct_BrownWorkShopBot.getCenter())
            let pathUnit = new PathUnit(spawnedUnit)
            pathUnit.setPathFirst(BROWN_BOT)
            addLaneUnitCount(Team.TEAM2, Lane.BOT, 1)

    else if itemTypeId == 'I007' //Mortar Team
        if building == udg_GreenWorkShop[0]
            let spawnedUnit = spawnUnit(true, MORTAR_TEAM, gg_rct_GreenWorkShopTop.getCenter())
            let pathUnit = new PathUnit(spawnedUnit)
            pathUnit.setPathFirst(GREEN_TOP)
            addLaneUnitCount(Team.TEAM1, Lane.TOP, 1)
        else if building == udg_GreenWorkShop[1]
            let spawnedUnit = spawnUnit(true, MORTAR_TEAM, gg_rct_GreenWorkShopBot.getCenter())
            let pathUnit = new PathUnit(spawnedUnit)
            pathUnit.setPathFirst(GREEN_BOT)
            addLaneUnitCount(Team.TEAM1, Lane.BOT, 1)
        else if building == udg_BrownWorkShop[0]
            let spawnedUnit = spawnUnit(false, MORTAR_TEAM, gg_rct_BrownWorkShopTop.getCenter())
            let pathUnit = new PathUnit(spawnedUnit)
            pathUnit.setPathFirst(BROWN_TOP)
            addLaneUnitCount(Team.TEAM2, Lane.TOP, 1)
        else if building == udg_BrownWorkShop[1]
            let spawnedUnit = spawnUnit(false, MORTAR_TEAM, gg_rct_BrownWorkShopBot.getCenter())
            let pathUnit = new PathUnit(spawnedUnit)
            pathUnit.setPathFirst(BROWN_BOT)
            addLaneUnitCount(Team.TEAM2, Lane.BOT, 1)
        

    else if itemTypeId == 'I002' //Melee Attack
        let current = GetPlayerTechCount(building.getOwner(), 'R000', true)
        if current == 4
            SetPlayerTechMaxAllowed(building.getOwner(), itemTypeId, 0)
        SetPlayerTechResearched(building.getOwner(), 'R000', current + 1)

    else if itemTypeId == 'I003' //Ranged Attack
        let current = GetPlayerTechCount(building.getOwner(), 'R001', true)
        if current == 4
            SetPlayerTechMaxAllowed(building.getOwner(), itemTypeId, 0)
        SetPlayerTechResearched(building.getOwner(), 'R001', current + 1)

    else if itemTypeId == 'I004' //Heavy Armor
        let current = GetPlayerTechCount(building.getOwner(), 'R002', true)
        if current == 4
            SetPlayerTechMaxAllowed(building.getOwner(), itemTypeId, 0)
        SetPlayerTechResearched(building.getOwner(), 'R002', current + 1)

    else if itemTypeId == 'I005' //Light Armor
        let current = GetPlayerTechCount(building.getOwner(), 'R003', true)
        if current == 4
            SetPlayerTechMaxAllowed(building.getOwner(), itemTypeId, 0)
        SetPlayerTechResearched(building.getOwner(), 'R003', current + 1)

    else if itemTypeId == 'I006' //Call to Arms

        if building.getOwner().getCPlayer().getTeam() == Team.TEAM1
            removeMilitaTeam1 = false
            for i = 0 to 15
                let spawnedUnit = spawnUnit(true, MILITIA_DEFEND, gg_rct_GreenCastle.getCenter())
                militiaTeam1.addUnit(spawnedUnit)
            doAfter(45, () -> (begin
                removeMilitaTeam1 = true
                ForGroup(militiaTeam1, () -> (begin
                    let u = GetEnumUnit()
                    u.addBuff(u, -1, DISARMED, 1)
                    u.issuePointOrder("move", gg_rct_GreenCastle.getCenter())
                    if gg_rct_GreenMilitiaDespawn.contains(u.getPos())
                        militiaTeam1.removeUnit(u)
                        u.remove()
                end))
            end))
            doAfter(50, () -> (begin
                removeMilitaTeam1 = true
                ForGroup(militiaTeam1, () -> (begin
                    let u = GetEnumUnit()
                    u.addBuff(u, -1, DISARMED, 1)
                    u.issuePointOrder("move", gg_rct_GreenCastle.getCenter())
                    if gg_rct_GreenMilitiaDespawn.contains(u.getPos())
                        militiaTeam1.removeUnit(u)
                        u.remove()
                end))
            end))
            doAfter(89, () -> (begin
                ForGroup(militiaTeam1, () -> (begin
                    let u = GetEnumUnit()
                    militiaTeam1.removeUnit(u)
                    u.remove()
                    print("remove after 60")
                end))
            end))

        else if building.getOwner().getCPlayer().getTeam() == Team.TEAM2
            removeMilitaTeam2 = false
            for i = 0 to 15
                let spawnedUnit = spawnUnit(false, MILITIA_DEFEND, gg_rct_BrownCastle.getCenter())
                militiaTeam2.addUnit(spawnedUnit)
            doAfter(45, () -> (begin
                removeMilitaTeam2 = true
                ForGroup(militiaTeam2, () -> (begin
                    let u = GetEnumUnit()
                    u.addBuff(u, -1, DISARMED, 1)
                    u.issuePointOrder("move", gg_rct_BrownCastle.getCenter())
                    if gg_rct_BrownMilitiaDespawn.contains(u.getPos())
                        militiaTeam2.removeUnit(u)
                        u.remove()
                end))
            end))
            doAfter(50, () -> (begin
                removeMilitaTeam2 = true
                ForGroup(militiaTeam2, () -> (begin
                    let u = GetEnumUnit()
                    u.addBuff(u, -1, DISARMED, 1)
                    u.issuePointOrder("move", gg_rct_BrownCastle.getCenter())
                    if gg_rct_BrownMilitiaDespawn.contains(u.getPos())
                        militiaTeam2.removeUnit(u)
                        u.remove()
                end))
            end))
            doAfter(89, () -> (begin
                ForGroup(militiaTeam2, () -> (begin
                    let u = GetEnumUnit()
                    militiaTeam2.removeUnit(u)
                    u.remove()
                end))
            end))


    else if itemTypeId == 'I008' //Teleport Top
        vec2 targetPos
        if building.getOwner().getCPlayer().getTeam() == Team.TEAM1
            targetPos = gg_rct_GreenPortTop.getCenter()
        else
            targetPos = gg_rct_BrownPortTop.getCenter()

        new ChannelTeleport(hero, targetPos, 3, 200)

    else if itemTypeId == 'I009' //Teleport Middle
        vec2 targetPos
        if building.getOwner().getCPlayer().getTeam() == Team.TEAM1
            targetPos = gg_rct_GreenPortMid.getCenter()
        else
            targetPos = gg_rct_BrownPortMid.getCenter()

        new ChannelTeleport(hero, targetPos, 3, 200)

    else if itemTypeId == 'I00A' //Teleport Bottom
        vec2 targetPos
        if building.getOwner().getCPlayer().getTeam() == Team.TEAM1
            targetPos = gg_rct_GreenPortBot.getCenter()
        else
            targetPos = gg_rct_BrownPortBot.getCenter()

        new ChannelTeleport(hero, targetPos, 3, 200)

    //stats
    else if itemTypeId == 'I00B' //Strength
        hero.wrapper().addStatAbsoluteBonus(Stat.STR, 1)
    else if itemTypeId == 'I00C' //Willpower
        hero.wrapper().addStatAbsoluteBonus(Stat.AGI, 1)
    else if itemTypeId == 'I00D' //Intelligenace
        hero.wrapper().addStatAbsoluteBonus(Stat.INT, 1)
    else if itemTypeId == 'I00E' //Armor
        hero.wrapper().addStatAbsoluteBonus(Stat.AR, 1)
    else if itemTypeId == 'I00F' //Attack Speed
        hero.wrapper().addStatAbsoluteBonus(Stat.AS, 1)
    else if itemTypeId == 'I00G' //Hit Points
        hero.wrapper().addStatAbsoluteBonus(Stat.HP, 15)
    else if itemTypeId == 'I00H' //Mana Point
        hero.wrapper().addStatAbsoluteBonus(Stat.MP, 10)
    else if itemTypeId == 'I00I' //Hit Point Regeneration
        hero.wrapper().addStatAbsoluteBonus(Stat.HR, 3)
    else if itemTypeId == 'I00J' //Mana Point Regeneration
        hero.wrapper().addStatAbsoluteBonus(Stat.MR, 1)


function onMilitiaDespawn()
    let u = GetTriggerUnit()
    if u.getTypeId() == MILITIA_DEFEND
        if removeMilitaTeam1
            if u.getOwner().getCPlayer().getTeam() == Team.TEAM1
                militiaTeam1.removeUnit(u)
                u.remove()
        if removeMilitaTeam2
            if u.getOwner().getCPlayer().getTeam() == Team.TEAM2
                militiaTeam2.removeUnit(u)
                u.remove()



init
    CreateTrigger()
        ..addAction(function onBuildingDeath)
        ..registerAnyUnitEvent(EVENT_PLAYER_UNIT_DEATH)

    CreateTrigger()
        ..addAction(function onBuildingAbility)
        ..registerAnyUnitEvent(EVENT_PLAYER_UNIT_SELL_ITEM)

    region reg = CreateRegion()
    reg.addRect(gg_rct_GreenMilitiaDespawn)
    reg.addRect(gg_rct_BrownMilitiaDespawn)

    CreateTrigger()
        ..addAction(function onMilitiaDespawn)
        ..registerEnterRegion(reg, null)

    /*group buildings = CreateGroup()
    GroupEnumUnitsOfPlayer(buildings, players[10], null)
    for unit u in buildings
        for int i=0 to 4
            UnitShareVision(u, players[i], true)
            
    GroupEnumUnitsOfPlayer(buildings, players[11], null)
    for unit u in buildings
        for int i=5 to 9
            UnitShareVision(u, players[i], true)

    buildings.destr()*/