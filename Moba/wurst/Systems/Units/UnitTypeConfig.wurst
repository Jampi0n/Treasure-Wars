package UnitTypeConfig

import UnitType
import Assets
import initlater OnAttack
import ClosureTimers
import General

/*
    EAT UNIT: every unit that can be eaten needs a version modelName+NoDeath.mdx that has invisible death animation
*/


public constant PATRON = createUnitType('n006')

public constant FOOTMAN = createUnitType('h00C', 15, 20, 35, 32, Units.footman1)
public constant RIFLEMAN = createUnitType('h00B', 20, 30, 20, 48, Units.rifleman1)
public constant KNIGHT = createUnitType('h00D', 50, 60, 50, 64, Units.knight1)
public constant MORTAR_TEAM = createUnitType('h00E', 35, 80, 25, 48, Units.mortarTeam1)
public constant MILITIA = createUnitType('h00F', 10, 25, 25, 32, Units.militia)
public constant MILITIA_DEFEND = createUnitType('h01B', 10, 25, 25, 16, Units.militia)
public constant PEASANT_DEFEND = createUnitType('h01C', 10, 0, 10, 16, Units.militia)


public constant TANK = createUnitType('h019', 250, 100, 90, 48, Units.warWagon)

public constant DARK_MINION_1 = createUnitType('n00C', 10, 15, 10, 32, Units.skeleton1)
public constant DARK_MINION_2 = createUnitType('n00D', 10, 20, 15, 32, Units.skeleton1)
public constant DARK_MINION_3 = createUnitType('n00E', 10, 25, 20, 32, Units.skeleton1)
public constant DARK_MINION_4 = createUnitType('n00F', 10, 30, 25, 32, Units.skeleton1)
public constant DARK_MINION_5 = createUnitType('n00G', 10, 35, 30, 32, Units.skeleton1)

public constant FROST_WYRM = createUnitType('u001', 100, 50, 0, 64, Units.frostWyrm1)



init
    doAfter(0, () -> (begin
        OnAttack.addOnAttackFunc((unit attacker, unit target, boolean _isActive) -> (begin
            if attacker.getTypeId() == TANK
                group nearby = CreateGroup()
                nearby.enumUnitsInRange(target.getPos(), 250)

                while(not nearby.isEmpty())
                    unit u = FirstOfGroup(nearby)
                    nearby.removeUnit(u)
                    if u.isTargetable(attacker.getOwner(), false, true) and u!=target
                        attacker.dealDamage(u, 75, ReductionType.PHYSICAL)

                nearby.destr()
        end))
    end))