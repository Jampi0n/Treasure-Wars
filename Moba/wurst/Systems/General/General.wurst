package General

import Buff

constant MAGIC_REDUCTION = 0.02

public enum ReductionType
    PHYSICAL
    MAGIC
    NONE


public function unit.getStr() returns int
    return GetHeroStr(this, true)

public function unit.getWp() returns int
    return GetHeroAgi(this, true)

public function unit.getInt() returns int
    return GetHeroInt(this, true)

public function real.factor(int statValue, real atHundred) returns real
    return this * (atHundred*statValue/100 + 1)

public function int.factor(int statValue, real atHundred) returns real
    return this.toReal().factor(statValue, atHundred)

public function real.bonus(int statValue, real atHundred) returns real
    return this + atHundred*statValue/100

public function int.bonus(int statValue, real atHundred) returns real
    return this.toReal().bonus(statValue, atHundred)

public function unit.dealDamage(unit target, real amount, ReductionType reductionType)
    let damageType = reductionType == ReductionType.PHYSICAL ? DAMAGE_TYPE_NORMAL : DAMAGE_TYPE_UNIVERSAL
    real newAmount
    if(reductionType == ReductionType.MAGIC and target.isType(UNIT_TYPE_HERO))
        let wp = GetHeroAgi(target, true)
        newAmount = amount * (1-( wp*MAGIC_REDUCTION )/( 1 + wp*MAGIC_REDUCTION ))
    else
        newAmount = amount

    print(this.getName()+" damages "+target.getName()+" for "+amount.toString()+" damage.")
    UnitDamageTarget(this, target, newAmount, false, false, ATTACK_TYPE_NORMAL, damageType, WEAPON_TYPE_WHOKNOWS)


public function unit.dispelMagicalBuffs(boolean positive, boolean negative)
    let buffList = BuffList.getBuffList(this).getLinkedList()
    for Buff currentBuff in buffList
        let buffType =currentBuff.getBuffType()
        if(buffType.isMagical())
            if(positive and buffType.isPositive()) or (negative and not buffType.isPositive())
                currentBuff.dispel()

public function unit.dispelPhysicallBuffs(boolean positive, boolean negative)
    let buffList = BuffList.getBuffList(this).getLinkedList()
    for Buff currentBuff in buffList
        let buffType =currentBuff.getBuffType()
        if(not buffType.isMagical())
            if(positive and buffType.isPositive()) or (negative and not buffType.isPositive())
                currentBuff.dispel()


public function unit.dispelBuffs(boolean positive, boolean negative)
    this.dispelMagicalBuffs(positive, negative)
    this.dispelPhysicallBuffs(positive, negative)