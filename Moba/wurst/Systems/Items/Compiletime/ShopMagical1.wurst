package ShopMagical1

import initlater ItemShopSystem
import ItemShopInitialize
import ItemIdGeneration
import Stats
import OnAttack
import General






function itemMageAmulet(int itemId)
    int mp = 10 //trigger
    if compiletime
        itemId.getTypeDef()
            ..setDescription("Restores {0} mana points per kill.".format(mp.toString()))
            ..setGoldCost(400)
    else
        CreateTrigger()
            ..registerAnyUnitEvent(EVENT_PLAYER_UNIT_DEATH)
            ..addAction(() -> (begin
                let killer = GetKillingUnit()
                if not GetTriggerUnit().isType(UNIT_TYPE_STRUCTURE) and killer.hasItemById(convertItemId(ITEM_ID_MAGE_AMULET))
                    killer.addMana(10. * killer.countItemsOfType(convertItemId(ITEM_ID_MAGE_AMULET)))
            end))

function itemMageGloves(int itemId)
    int wp = 10
    if compiletime
        itemId.getTypeDef()
        ..setDescription("+ {0} willpower".format(wp.toString()))
            ..setGoldCost(500)
    else
        itemId.getItem()
            ..addStatBonusAbsolute(Stat.MP, wp)


function itemManaRing(int itemId)
    int hr = 30
    if compiletime
        itemId.getTypeDef()
            ..setDescription("+ {0} mana regeneration per 10 seconds".format(hr.toString()))
            ..setGoldCost(450)
    else
        itemId.getItem()
            ..addStatBonusAbsolute(Stat.HR, hr)


function itemMageArmor(int itemId)
    int mp = 50
    int hp = 50
    int ar = 5
    if compiletime
        itemId.getTypeDef()
            ..setDescription("+ {0} mana points|n +{1} hit points|n +{2} armor".format(mp.toString(), hp.toString(), ar.toString()))
            ..setGoldCost(750)
    else
        itemId.getItem()
            ..addStatBonusAbsolute(Stat.MP, mp)
            ..addStatBonusAbsolute(Stat.HP, hp)
            ..addStatBonusAbsolute(Stat.AR, ar)


function itemWizardsHat(int itemId)
    int intel = 8
    if compiletime
        itemId.getTypeDef()
            ..setDescription("+ {0} intelligence".format(intel.toString()))
            ..setGoldCost(400)
    else
        itemId.getItem()
            ..addStatBonusAbsolute(Stat.INT, intel)

            
function itemGemOfMana(int itemId)
    int mp = 150
    if compiletime
        itemId.getTypeDef()
            ..setDescription("+ {0} mana points".format(mp.toString()))
            ..setGoldCost(500)
    else
        itemId.getItem()
            ..addStatBonusAbsolute(Stat.MP, mp)
            
function itemGemOfDarkness(int itemId)
    int dmg = 8
    if compiletime
        itemId.getTypeDef()
            ..setDescription("Attacks deal {0} additional void damage.".format(dmg.toString()))
            ..setGoldCost(540)
    else
        OnAttack.addOnAttackFunc((unit attacker, unit target, boolean isActive) -> (begin
            if attacker.hasItemById(itemId)
                attacker.dealDamage(target, dmg.toReal() * attacker.countItemsOfType(convertItemId(itemId)) , ReductionType.NONE)
        end))


function itemSkull(int itemId)
    int dmg = 10
    if compiletime
        itemId.getTypeDef()
            ..setDescription("+ {0} attack damage".format(dmg.toString()))
            ..setGoldCost(420)
    else
        itemId.getItem()
            ..addStatBonusAbsolute(Stat.AD, dmg)

function itemVoodooDoll(int itemId)
    int mp = 4
    if compiletime
        itemId.getTypeDef()
            ..setDescription("Restores {0} mana points everytime you are attacked.".format(mp.toString()))
            ..setGoldCost(600)
    else
        OnAttack.addOnAttackFunc((unit attacker, unit target, boolean isActive) -> (begin
            if target.hasItemById(itemId)
                target.addMana(mp.toReal() * target.countItemsOfType(convertItemId(itemId)))
        end))

function itemSpellBook(int itemId)
    int intel = 15
    if compiletime
        itemId.getTypeDef()
            ..setDescription("+ {0} intelligence".format(intel.toString()))
            ..setGoldCost(750)
    else
        itemId.getItem()
            ..addStatBonusAbsolute(Stat.INT, intel)

function itemMagicStaff(int itemId)
    int mana = 6
    if compiletime
        itemId.getTypeDef()
            ..setDescription("Attacks drain {0} mana from the target.".format(mana.toString()))
            ..setGoldCost(640)
    else
        OnAttack.addOnAttackFunc((unit attacker, unit target, boolean isActive) -> (begin
            if attacker.hasItemById(itemId) and target.getMana() > 0
                let manaDrained = min(mana.toReal() * target.countItemsOfType(convertItemId(itemId)) , target.getMana())
                attacker.addMana(manaDrained)
                target.addMana(-manaDrained)
        end))


function itemApprenticeScroll(int itemId)
    int factor = 35 //trigger
    if compiletime
        itemId.getTypeDef()
            ..setDescription("Restores {0}% of your mana, when you level up. This effect does not stack.".format(factor.toString()))
            ..setGoldCost(500)
    else
        CreateTrigger()
            ..registerAnyUnitEvent(EVENT_PLAYER_HERO_LEVEL)
            ..addAction(() -> (begin
                let hero = GetTriggerUnit()
                if hero.hasItemById(convertItemId(ITEM_ID_APPRENTICES_SCROLL))
                    hero.addMana(hero.getMaxMana()*0.35)
        end))

@compiletime
public function shopMagical1Init()
    itemMageAmulet(ITEM_ID_MAGE_AMULET)
    itemMageGloves(ITEM_ID_MAGE_GLOVES)
    itemManaRing(ITEM_ID_MANA_RING)
    itemMageArmor(ITEM_ID_MAGE_ARMOR)
    itemWizardsHat(ITEM_ID_WIZARDS_HAT)
    itemGemOfMana(ITEM_ID_GEM_OF_MANA)
    itemGemOfDarkness(ITEM_ID_GEM_OF_DARKNESS)
    itemSkull(ITEM_ID_SKULL)
    itemVoodooDoll(ITEM_ID_VOODOO_DOLL)
    itemSpellBook(ITEM_ID_SPELL_BOOK)
    itemMagicStaff(ITEM_ID_MAGIC_STAFF)
    itemApprenticeScroll(ITEM_ID_APPRENTICES_SCROLL)

