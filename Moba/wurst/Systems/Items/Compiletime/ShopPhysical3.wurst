package ShopPhysical3

import initlater ItemShopSystem
import ItemShopInitialize
import UnitWrapper
import Stats
import ObjectIdGenerator
import ItemIdGeneration



function itemBloodSword(int itemId)
    if compiletime
        itemId.getTypeDef()
            ..setDescription("needed")
            ..setGoldCost(150)
    else
        itemId.getItem()
            ..addStatBonusAbsolute(Stat.AR, 10)

function itemFirehandGauntlets(int itemId)
    if compiletime
        itemId.getTypeDef()
            ..setDescription("needed")
            ..setGoldCost(150)
    else
        itemId.getItem()
            ..addStatBonusAbsolute(Stat.AR, 10)

function itemSpikedArmor(int itemId)
    if compiletime
        itemId.getTypeDef()
            ..setDescription("needed")
            ..setGoldCost(150)
    else
        itemId.getItem()
            ..addStatBonusAbsolute(Stat.AR, 10)

function itemCursedSword(int itemId)
    if compiletime
        itemId.getTypeDef()
            ..setDescription("needed")
            ..setGoldCost(150)
    else
        itemId.getItem()
            ..addStatBonusAbsolute(Stat.AR, 10)

function itemArmorOfCourage(int itemId)
    if compiletime
        itemId.getTypeDef()
            ..setDescription("needed")
            ..setGoldCost(150)
    else
        itemId.getItem()
            ..addStatBonusAbsolute(Stat.AR, 10)

function itemHelmetOfJustice(int itemId)
    if compiletime
        itemId.getTypeDef()
            ..setDescription("needed")
            ..setGoldCost(150)
    else
        itemId.getItem()
            ..addStatBonusAbsolute(Stat.AR, 10)


@compiletime
public function shopPhysical3Init()
    itemArmorOfCourage(ITEM_ID_ARMOR_OF_COURAGE)
    itemBloodSword(ITEM_ID_BLOOD_SWORD)
    itemCursedSword(ITEM_ID_CURSED_SWORD)
    itemFirehandGauntlets(ITEM_ID_FIREHAND_GAUNTLETS)
    itemHelmetOfJustice(ITEM_ID_HELMET_OF_JUSTICE)
    
    itemSpikedArmor(ITEM_ID_SPIKED_ARMOR)