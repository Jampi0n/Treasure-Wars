package ShopMagical2

import initlater ItemShopSystem
import ItemShopInitialize
import UnitWrapper
import ItemIdGeneration
import OnAttack
import General
import Assets

function itemSkullPendant(int itemId)
    int hp = 150
    int mp = 150
    int killMana = 12 //trigger
    if compiletime
        itemId.getTypeDef()
            ..setDescription("+ {0} mana points|n +{1} hit points|nRestores {2} mana points per kill.".format(
                mp.toString(), hp.toString(), killMana.toString()
            ))
            ..setGoldCost(2100)
            ..addRequirement(ITEM_ID_SKULL)
            ..addRequirement(ITEM_ID_MAGE_AMULET)
    else
        itemId.getItem()
            ..addStatBonusAbsolute(Stat.HP, hp)
            ..addStatBonusAbsolute(Stat.MP, mp)

        CreateTrigger()
            ..registerAnyUnitEvent(EVENT_PLAYER_UNIT_DEATH)
            ..addAction(() -> (begin
                let killer = GetKillingUnit()
                if not GetTriggerUnit().isType(UNIT_TYPE_STRUCTURE) and killer.hasItemById(convertItemId(ITEM_ID_SKULL_PENDANT))
                    killer.addMana(12. * killer.countItemsOfType(convertItemId(ITEM_ID_SKULL_PENDANT)))
                    killer.addEffect(Abilities.spiritTouchTarget, "origin").destr()
            end))


function itemVisionWard(int itemId)
    int mp = 250
    int hp = 400
    if compiletime

        itemId.getTypeDef()
            ..setDescription("+ {0} mana points|n+ {1} hit points|nActive:|nSummons an invulnerable and immovable ward that provides vision in an area.".format(
                mp.toString(), hp.toString()
            ))
            ..setGoldCost(2600)
            ..addRequirement(ITEM_ID_MAGIC_STAFF)
            ..addRequirement(ITEM_ID_GEM_OF_MANA)
            ..addRequirement(ITEM_ID_GEM_OF_HEALTH)
            ..setAbility('A00D')
    else
        itemId.getItem()
            ..addStatBonusAbsolute(Stat.MP, mp)
            ..addStatBonusAbsolute(Stat.HP, hp)



            
function itemVoodooMask(int itemId)
    int intel = 18
    int voodooDmg = 250 //trigger
    if compiletime
        itemId.getTypeDef()
            ..setDescription("+ {0} intelligence|nWhen the bearer of this mask dies, the killer will take {1} void damage.".format(
                intel.toString(), voodooDmg.toString()
            ))
            ..setGoldCost(1450)
            ..addRequirement(ITEM_ID_VOODOO_DOLL)
            ..addRequirement(ITEM_ID_GEM_OF_DARKNESS)
    else
        itemId.getItem()
            ..addStatBonusAbsolute(Stat.INT, intel)

        CreateTrigger()
            ..registerAnyUnitEvent(EVENT_PLAYER_UNIT_DEATH)
            ..addAction(() -> (begin
                let killer = GetKillingUnit()
                if not killer.isType(UNIT_TYPE_STRUCTURE) and GetTriggerUnit().hasItemById(convertItemId(ITEM_ID_VOODOO_MASK))
                    GetTriggerUnit().dealDamage(killer, 250, ReductionType.NONE)
                    killer.addEffect(Abilities.deathandDecayTarget, "head").destr()
            end))

function itemGhostHood(int itemId)
    int mp = 60
    int hp = 100
    int ar = 6
    int wp = 14
    if compiletime
        itemId.getTypeDef()
            ..setDescription("+ {0} mana points|n+ {1} hit points|n+ {2} armor|n+ {3} willpower".format(
                mp.toString(), hp.toString(), ar.toString(), wp.toString()
            ))
            ..setGoldCost(1840)
            ..addRequirement(ITEM_ID_MAGE_ARMOR)
            ..addRequirement(ITEM_ID_MAGE_GLOVES)
    else
        itemId.getItem()
            ..addStatBonusAbsolute(Stat.MP, mp)
            ..addStatBonusAbsolute(Stat.AGI, wp)
            ..addStatBonusAbsolute(Stat.HP, hp)
            ..addStatBonusAbsolute(Stat.AR, ar)

function itemEvilBook(int itemId)
    int intel = 25
    if compiletime
        itemId.getTypeDef()
            ..setDescription("+ {0} intelligence".format(
                intel.toString()
            ))
            ..setGoldCost(1650)
            ..addRequirement(ITEM_ID_APPRENTICES_SCROLL)
            ..addRequirement(ITEM_ID_SPELL_BOOK)
    else
        itemId.getItem()
            ..addStatBonusAbsolute(Stat.INT, intel)
            
function itemFrostRing(int itemId)
    int hr = 60
    int mr = 30
    if compiletime
        itemId.getTypeDef()
            ..setDescription("+ {0} hit point regeneration per 10 seconds|n+ {1} mana point regeneration per 10 seconds".format(
                hr.toString(), mr.toString()
            ))
            ..setGoldCost(1900)
            ..addRequirement(ITEM_ID_MANA_RING)
            ..addRequirement(ITEM_ID_RING_OF_HEALTH)
    else
        itemId.getItem()
            ..addStatBonusAbsolute(Stat.HR, hr)
            ..addStatBonusAbsolute(Stat.MR, mr)

function itemScepterOfTheTides(int itemId)
    int intel = 9
    int voidDmg = 15
    int manaDrain = 8
    if compiletime
        itemId.getTypeDef()
            ..setDescription("+ {0} intelligence|nDrains {1} mana and deals {2} void damage per attack.".format(
                intel.toString(), manaDrain.toString(), voidDmg.toString()
            ))
            ..setGoldCost(2050)
            ..addRequirement(ITEM_ID_MAGIC_STAFF)
            ..addRequirement(ITEM_ID_GEM_OF_DARKNESS)
    else
        itemId.getItem()
            ..addStatBonusAbsolute(Stat.INT, intel)


        OnAttack.addOnAttackFunc((unit attacker, unit target, boolean isActive) -> (begin
            if attacker.hasItemById(convertItemId(itemId)) and not target.isType(UNIT_TYPE_STRUCTURE)
                let manaDrained = min(manaDrain.toReal() * target.countItemsOfType(convertItemId(itemId)) , target.getMana())
                attacker.dealDamage(target, voidDmg.toReal() * attacker.countItemsOfType(convertItemId(itemId)) , ReductionType.NONE)
                attacker.addMana(manaDrained)
                target.addMana(-manaDrained)
                target.addEffect(Abilities.avengerMissile, "chest").destr()
                target.addEffect(Abilities.arcaneTowerAttack, "chest").destr()
        end))


function itemBootsOfDarkness(int itemId)
    int ms = 40
    int voidDmg = 12
    int intelFactor = 10
    if compiletime
        itemId.getTypeDef()
            ..setDescription("+ {0} movement speed|n+ {1}% intelligence|nAttacks deal {2} additional void damage.|nMovement speed bonus from boots does not stack.".format(
                ms.toString(), intelFactor.toString(), voidDmg.toString()
            ))
            ..setGoldCost(1500)
            ..addRequirement(ITEM_ID_LIGHT_BOOTS)
            ..addRequirement(ITEM_ID_GEM_OF_DARKNESS)
    else
        itemId.getItem()
            ..addPickupFunction(()->(begin
                if isUnique() and hasNot(convertItemId(ITEM_ID_HEAVY_BOOTS)) and hasNot(convertItemId(ITEM_ID_LIGHT_BOOTS))
                    getTriggerHero().wrapper().addStatAbsoluteBonus(Stat.MS, ms)
            end))

            ..addDropFunction(()->(begin
                if isUnique() and hasNot(convertItemId(ITEM_ID_HEAVY_BOOTS)) and hasNot(convertItemId(ITEM_ID_LIGHT_BOOTS))
                    getTriggerHero().wrapper().addStatAbsoluteBonus(Stat.MS, -ms)
            end))
            ..addStatBonusRelative(Stat.INT, intelFactor*10)

        OnAttack.addOnAttackFunc((unit attacker, unit target, boolean isActive) -> (begin
            if attacker.hasItemById(convertItemId(itemId)) and not target.isType(UNIT_TYPE_STRUCTURE)
                attacker.dealDamage(target, voidDmg.toReal() * attacker.countItemsOfType(convertItemId(itemId)) , ReductionType.NONE)
                target.addEffect(Abilities.avengerMissile, "chest").destr()
        end))

function itemMagmaCrystal(int itemId)
    int mp = 125
    int hp = 250
    int magicDmg = 20
    if compiletime
        itemId.getTypeDef()
            ..setDescription("+ {0} hit points|n+ {1} mana points|nAttacks deal {2} additional magic damage.".format(
                hp.toString(), mp.toString(), magicDmg.toString()
            ))
            ..setGoldCost(1750)
            ..addRequirement(ITEM_ID_GEM_OF_DARKNESS)
            ..addRequirement(ITEM_ID_GEM_OF_HEALTH)
            ..addRequirement(ITEM_ID_GEM_OF_MANA)
    else
        itemId.getItem()
            ..addStatBonusAbsolute(Stat.MP, mp)
            ..addStatBonusAbsolute(Stat.HP, hp)

        OnAttack.addOnAttackFunc((unit attacker, unit target, boolean isActive) -> (begin
            if attacker.hasItemById(convertItemId(itemId)) and not target.isType(UNIT_TYPE_STRUCTURE)
                attacker.dealDamage(target, magicDmg.toReal() * attacker.countItemsOfType(convertItemId(itemId)) , ReductionType.MAGIC)
                target.addEffect(Abilities.fireBallMissile, "chest").destr()
        end))

function itemCursedMask(int itemId)
    int intel = 15
    int killMana = 12 //trigger
    if compiletime
        itemId.getTypeDef()
            ..setDescription("+ {0} intelligence|nRestores {1} mana points per kill.".format(
                intel.toString(), killMana.toString()
            ))
            ..setGoldCost(2000)
            ..addRequirement(ITEM_ID_SKULL)
            ..addRequirement(ITEM_ID_WIZARDS_HAT)
    else
        itemId.getItem()
            ..addStatBonusAbsolute(Stat.INT, intel)

        CreateTrigger()
            ..registerAnyUnitEvent(EVENT_PLAYER_UNIT_DEATH)
            ..addAction(() -> (begin
                let killer = GetKillingUnit()
                if not GetTriggerUnit().isType(UNIT_TYPE_STRUCTURE) and killer.hasItemById(convertItemId(ITEM_ID_CURSED_MASK))
                    killer.addMana(12. * killer.countItemsOfType(convertItemId(ITEM_ID_CURSED_MASK)))
                    killer.addEffect(Abilities.spiritTouchTarget, "origin").destr()
            end))


function itemAncientStoneTablet(int itemId)
    int hp = 260
    int wp = 18
    if compiletime
        itemId.getTypeDef()
            ..setDescription("+ {0} hit points|n+ {1} willpower".format(
                hp.toString(), wp.toString()
            ))
            ..setGoldCost(1800)
            ..addRequirement(ITEM_ID_GEM_OF_HEALTH)
            ..addRequirement(ITEM_ID_MAGE_GLOVES)
    else
        itemId.getItem()
            ..addStatBonusAbsolute(Stat.HP, hp)
            ..addStatBonusAbsolute(Stat.AGI, wp)

function itemBattlemageArmor(int itemId)
    int mp = 70
    int hp = 250
    int ar = 12
    if compiletime
        itemId.getTypeDef()
            ..setDescription("+ {0} mana points|n+ {1} hit points|n+ {2} armor".format(
                mp.toString(), hp.toString(), ar.toString()
            ))
            ..setGoldCost(1700)
            ..addRequirement(ITEM_ID_MAGE_ARMOR)
            ..addRequirement(ITEM_ID_GEM_OF_HEALTH)
    else
        itemId.getItem()
            ..addStatBonusAbsolute(Stat.MP, mp)
            ..addStatBonusAbsolute(Stat.HP, hp)
            ..addStatBonusAbsolute(Stat.AR, ar)


@compiletime
public function shopMagical2Init()
    itemSkullPendant(ITEM_ID_SKULL_PENDANT)
    itemVisionWard(ITEM_ID_VISION_WARD)
    itemVoodooMask(ITEM_ID_VOODOO_MASK)
    itemGhostHood(ITEM_ID_GHOST_HOOD)
    itemEvilBook(ITEM_ID_EVIL_BOOK)
    itemFrostRing(ITEM_ID_RING_OF_REGEN)
    itemScepterOfTheTides(ITEM_ID_SCEPTER_OF_THE_TIDES)
    itemBootsOfDarkness(ITEM_ID_BOOTS_OF_DARKNESS)
    itemMagmaCrystal(ITEM_ID_MAGMA_CRYSTAL)
    itemCursedMask(ITEM_ID_CURSED_MASK)
    itemAncientStoneTablet(ITEM_ID_ANCIENT_STONE_TABLET)
    itemBattlemageArmor(ITEM_ID_BATTLEMAGE_ARMOR)
