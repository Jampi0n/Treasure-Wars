package ShopPhysical2

import initlater ItemShopSystem
import ItemShopInitialize
import UnitWrapper
import Stats
import ObjectIdGenerator

import ShopPhysical1
import ShopMagical1

public constant SHOP_ID_PHYSICAL_2= UNIT_ID_GEN.next()
public constant SHOP_PHYSICAL_2 = compiletime(new Shop(SHOP_ID_PHYSICAL_2, "SHOP 2", 1.4,  "units\\human\\HeroMountainKing\\HeroMountainKing") castTo int)

constant THIS_SHOP = SHOP_PHYSICAL_2


public constant ITEM_ID_SKULL_AXE = compiletime(newItem("Skull Axe", THIS_SHOP, true, "BTNINV_Axe_09"))
public constant ITEM_ID_GAUNTLET_OF_PROTECTION = compiletime(newItem("Gauntlet of Protection", THIS_SHOP, true, "BTNPlatedGauntlet"))
public constant ITEM_ID_HEAVY_BOOTS = compiletime(newItem("Heavy Boots", THIS_SHOP, true, "BTNHeavyBoots"))
public constant ITEM_ID_SPIKED_MAIL = compiletime(newItem("Spiked Mail", THIS_SHOP, true, "BTNINV_Chest_Chain_14"))
public constant ITEM_ID_HEAVY_ARMOR = compiletime(newItem("Heavy Armor", THIS_SHOP, true, "BTNSeaHeavyArmor"))

public constant ITEM_ID_WAR_HORN = compiletime(newItem("War Horn", THIS_SHOP, true, "BTNHorn"))
public constant ITEM_ID_WAR_DRUM = compiletime(newItem("War Drum", THIS_SHOP, true, "BTNTribalDrumOfWar"))
public constant ITEM_ID_HEAVY_HELMET = compiletime(newItem("Heavy Helmet", THIS_SHOP, true, "BTNHelmetOfDefender"))
public constant ITEM_ID_HAMMER_OF_MIGHT = compiletime(newItem("Hammer of Might", THIS_SHOP, true, "BTNINV_Hammer_10"))
public constant ITEM_ID_STEEL_ARMOR = compiletime(newItem("Steel Armor", THIS_SHOP, true, "BTNINV_Chest_Plate11"))

public constant ITEM_ID_MACE = compiletime(newItem("Mace", THIS_SHOP, true, "BTNMaceStrikeGlowless"))


public constant ITEM_ID_RAVEN_SWORD = compiletime(newItem("Raven Sword", THIS_SHOP, false, "BTNRaven_Sword"))

function itemSkullAxe(int itemId)
    if compiletime
        itemId.getTypeDef()
            ..setDescription("needed")
            ..setGoldCost(150)
            ..addRequirement(ITEM_ID_WAR_AXE)
            ..addRequirement(ITEM_ID_SKULL)
    else
        itemId.getItem()

function itemGauntletOfProtection(int itemId)
    if compiletime
        itemId.getTypeDef()
            ..setDescription("needed")
            ..setGoldCost(900)
            ..addRequirement(ITEM_ID_PLATED_GAUNTLETS)
    else
        itemId.getItem()

function itemHeavyBoots(int itemId)
    if compiletime
        itemId.getTypeDef()
            ..setDescription("needed")
            ..setGoldCost(1200)
            ..addRequirement(ITEM_ID_LIGHT_BOOTS)
    else
        itemId.getItem()

function itemSpikedMail(int itemId)
    if compiletime
        itemId.getTypeDef()
            ..setDescription("17")
            ..setGoldCost(1700)
            ..addRequirement(ITEM_ID_SPIKES)
            ..addRequirement(ITEM_ID_LEATHER_ARMOR)
    else
        itemId.getItem()

function itemHeavyArmor(int itemId)
    if compiletime
        itemId.getTypeDef()
            ..setDescription("17")
            ..setGoldCost(1700)
            ..addRequirement(ITEM_ID_LEATHER_ARMOR)
            ..addRequirement(ITEM_ID_SHIELD)
            ..addRequirement(ITEM_ID_GEM_OF_HEALTH)
    else
        itemId.getItem()

function itemMace(int itemId)
    if compiletime
        itemId.getTypeDef()
            ..setDescription("17")
            ..setGoldCost(1700)
            ..addRequirement(ITEM_ID_SPIKES)
            ..addRequirement(ITEM_ID_WAR_AXE)
    else
        itemId.getItem()

function itemSteelArmor(int itemId)
    if compiletime
        itemId.getTypeDef()
            ..setDescription("17")
            ..setGoldCost(1700)
            ..addRequirement(ITEM_ID_MAGE_AMULET)
            ..addRequirement(ITEM_ID_LEATHER_ARMOR)
    else
        itemId.getItem()

function itemHammerOfMight(int itemId)
    if compiletime
        itemId.getTypeDef()
            ..setDescription("17")
            ..setGoldCost(1700)
            ..addRequirement(ITEM_ID_SPIKES)
            ..addRequirement(ITEM_ID_HAMMER_OF_STRENGTH)
    else
        itemId.getItem()

function itemWarDrum(int itemId)
    if compiletime
        itemId.getTypeDef()
            ..setDescription("17")
            ..setGoldCost(1700)
            ..addRequirement(ITEM_ID_GLOVES_OF_HASTE)
            ..addRequirement(ITEM_ID_LIGHT_BOOTS)
    else
        itemId.getItem()

function itemWarHorn(int itemId)
    if compiletime
        itemId.getTypeDef()
            ..setDescription("17")
            ..setGoldCost(1700)
            ..addRequirement(ITEM_ID_HAMMER_OF_STRENGTH)
            ..addRequirement(ITEM_ID_WAR_AXE)
            ..addRequirement(ITEM_ID_BOW)
    else
        itemId.getItem()

function itemHeavyHelmet(int itemId)
    if compiletime
        itemId.getTypeDef()
            ..setDescription("17")
            ..setGoldCost(1200)
            ..addRequirement(ITEM_ID_GEM_OF_HEALTH)
            ..addRequirement(ITEM_ID_SHIELD)
    else
        itemId.getItem()

function itemRavenSword(int itemId)
    if compiletime
        itemId.getTypeDef()
            ..setDescription("17")
            ..setGoldCost(1700)
            ..addRequirement(ITEM_ID_DAGGER)
            ..addRequirement(ITEM_ID_WAR_AXE)
    else
        itemId.getItem()

@compiletime
public function shopPhysical2Init()
    itemSkullAxe(ITEM_ID_SKULL_AXE)
    itemGauntletOfProtection(ITEM_ID_GAUNTLET_OF_PROTECTION)
    itemHeavyBoots(ITEM_ID_HEAVY_BOOTS)
    itemSpikedMail(ITEM_ID_SPIKED_MAIL)
    itemHeavyArmor(ITEM_ID_HEAVY_ARMOR)
    itemRavenSword(ITEM_ID_RAVEN_SWORD)
    itemMace(ITEM_ID_MACE)
    itemSteelArmor(ITEM_ID_STEEL_ARMOR)
    itemHammerOfMight(ITEM_ID_HAMMER_OF_MIGHT)
    itemWarDrum(ITEM_ID_WAR_DRUM)
    itemWarHorn(ITEM_ID_WAR_HORN)
    itemHeavyHelmet(ITEM_ID_HEAVY_HELMET)