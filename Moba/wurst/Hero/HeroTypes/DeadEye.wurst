package DeadEye

import HeroType
import Stats
import OnAttack
import General
import Buff
import BuffTypeConfig
import Missile

public constant HERO_DEADEYE = 'H00I'
HeroType heroType

function setupStats()
    heroType
        ..setStat(Stat.AD, 5, 40)
        ..setStat(Stat.AR, 5, 15)
        ..setStat(Stat.AS, 0, 40)
        ..setStat(Stat.HP, 5, 25)
        ..setStat(Stat.HR, 0, 10)
        ..setStat(Stat.MP, 10, 25)
        ..setStat(Stat.MR, 5, 20)
        ..setStat(Stat.MS, 5, 20)
        ..setStat(Stat.STR, 10, 40)
        ..setStat(Stat.WP, 5, 10)
        ..setStat(Stat.INT, 5, 20)


function onAttack()
    if(OnAttack.getAttacker().getAbilityLevel('A00N')!=0)
        let target = OnAttack.getTarget()
        let attacker = OnAttack.getAttacker()
        let level = attacker.getAbilityLevel('A00N')
        if(target.getHP() - GetEventDamage() <= 20 + 10*level)
            attacker.dealDamage(target, 21. + 10*level, ReductionType.NONE)
            createUnit(attacker.getOwner(), 'n00B'+level, target.getPos(), attacker.getPos().angleTo(target.getPos()))
                ..setTimedLife(20)

function onSpellCast()
    let spellId = GetSpellAbilityId()
    var caster = GetTriggerUnit()
    let level = caster.getAbilityLevel(spellId)

    if(spellId=='A00O') //Terror
        group nearby = CreateGroup()
        nearby.enumUnitsInRange(caster.getPos(), 300.+100*level)

        while(not nearby.isEmpty())
            unit target = FirstOfGroup(nearby)
            nearby.removeUnit(target)
            if(IsUnitEnemy(target, caster.getOwner()) and not target.isType(UNIT_TYPE_ANCIENT) and not target.isType(UNIT_TYPE_STRUCTURE) and target.isAlive())
                new Buff(target, caster, 1.5 + 0.5*level, MISS, 1)

        nearby.destr()

    if(spellId=='A00Q') //Piercing Shot
        new Missile(caster, caster.getPos().withZ(80), 900, caster.getPos().angleTo(vec2(GetSpellTargetX(), GetSpellTargetY())), "Abilities\\Weapons\\BallistaMissile\\BallistaMissile.mdl")
            ..hitOnce()
            ..addHitCondition(() -> (begin
            let missile = Missile.getTriggerMissile()
            let target = Missile.getMissileTarget()
            return IsUnitEnemy(target, missile.getOwner().getOwner()) and not IsUnitType(target, UNIT_TYPE_ANCIENT) and not IsUnitType(target, UNIT_TYPE_STRUCTURE)
        end) )
            ..addHitFunction(() -> (begin
            let missile = Missile.getTriggerMissile()
            let missileCaster = missile.getOwner()
            missileCaster.dealDamage(Missile.getMissileTarget(), (missileCaster.getAbilityLevel('A00Q')*50.+50).bonus(missileCaster.getStr(), 200), ReductionType.PHYSICAL)

        end) )
            ..setMaxRange(1000)
            ..setSize(10)


init
    
    heroType = new HeroType(HERO_DEADEYE)
    heroType.addOnAttackFunc(function onAttack)
    heroType.addOnSpellCastFunc(function onSpellCast)

    setupStats()