package PythonWarriores

//0

import HeroType
import HeroControl
import ClosureTimers
import OnUnitEnterLeave
import SoundUtils

constant SOUND_PARALYZING_STRIKE = new SoundDefinition(Sounds.shadowStrikeBirth1, false, true)
constant SOUND_POISON_SPIT = new SoundDefinition(Sounds.corrosiveBreathMissileTarget1, false, true)
constant SOUND_EMPOWERED_STRIKE = new SoundDefinition(Sounds.metalHeavySliceFlesh3, false, true)

constant ABILITY_ENVENOMED_BLADES = 'AZ0P'
constant ABILITY_MISTWALK = 'AZ0Q'
constant ABILITY_POISON_SPIT = 'AZ0W'
constant ABILITY_EMPOWERED_STRIKE = 'AZ0E'
constant ABILITY_PARALYZING_STRIKE = 'AZ0R'

public constant HERO_PYTHON_WARRIORES = 'H00J'
HeroType heroType

//Balancing and Object Editing
constant real array ENVENOMED_BLADES_DAMAGE = [5, 10, 15, 20, 25]
constant real ENVENOMED_BLADES_DAMAGE_BONUS = 20
constant real array ENVENOMED_BLADES_DURATION = [5, 5 ,5 ,5 ,5 ]
constant BUFF_ENVENOMED_BLADES = new BuffType(false, true)



@compiletime
function envenomedBlades()
    let aDef = createNoEffectAbiltiy(ABILITY_ENVENOMED_BLADES)
        ..setupIcon("PASPoisonBlades")
        ..setupWithHotKey("Envenomed Blades", "D")
        ..setLearnString("Attacks deal poison damage every second.", (int lvl) -> (begin
            return "{0} damage, {1} seconds.".format(
            ENVENOMED_BLADES_DAMAGE[lvl-1].str()+ENVENOMED_BLADES_DAMAGE_BONUS.getBonusString(C_INT), 
            ENVENOMED_BLADES_DURATION[lvl-1].str())
        end) )

    for lvl = 1 to 5
        aDef
            ..setTooltipNormalExtended(lvl, "Attacks deal {0} poison damage every second for {1} seconds.".format(
            ENVENOMED_BLADES_DAMAGE[lvl-1].str()+ENVENOMED_BLADES_DAMAGE_BONUS.getBonusString(C_INT), 
            ENVENOMED_BLADES_DURATION[lvl-1].str())
            )
    
constant real array MISTWALK_DURATION = [5, 5.5, 6, 6.5, 7]
constant real MISTWALK_DURATION_BONUS = 4

@compiletime
function mistwalk()
    int array MANA = [100, 90, 80, 70, 60]
    real array COOLDOWN = [18, 18, 18, 18, 18]

    let aDef = new AbilityDefinitionRoar(ABILITY_MISTWALK)
        ..setupIcon("BTNNoxiousFumes")
        ..setAnimationNames("morph,first")
        ..setupWithHotKey("Mistwalk", "Q")
        ..setLightningEffects("")
        ..setArtCaster("")
        ..setArtEffect("")
        ..setMissileArt("")
        ..setArtTarget("")
        ..setLearnString("Turns the Python Warriores invisibile.", (int lvl) -> (begin
            return "{0} seconds.".format( MISTWALK_DURATION[lvl-1].toString()+MISTWALK_DURATION_BONUS.getBonusString(C_INT))
        end) )

    for lvl = 1 to 5
        aDef
            ..setCooldown(lvl, COOLDOWN[lvl-1])
            ..setManaCost(lvl, MANA[lvl-1])
            ..setTargetsAllowed(lvl, "none")
            ..setTooltipNormalExtended(lvl,
                "Turns the Python Warriores invisibile for {0} seconds.".format(
                MISTWALK_DURATION[lvl-1].toString()+MISTWALK_DURATION_BONUS.getBonusString(C_INT)))

constant int array POISON_SPIT_SLOW_MS = [-30, -35, -40, -45, -50]
constant real array POISON_SPIT_DOT = [20, 28, 36, 44, 52]
constant real POISON_SPIT_DOT_BONUS = 50.
constant int array POISON_SPIT_ARMOR_REDUCTION = [-5, -10, -15, -20, -25]
constant real array POISON_SPIT_DURATION = [6, 7, 8, 9, 10]
constant real array POISON_SPIT_AOE = [200, 225, 250, 275, 300]

constant integer ABILITY_POISON_SPIT_SLOWED = compiletime(ABIL_ID_GEN.next())
constant integer ABILITY_POISON_SPIT_ARMOR_REDUCED = compiletime(ABIL_ID_GEN.next())
constant integer BUFF_ID_POISON_SPIT = 'B00B'

constant BUFF_POISON_SPIT = new BuffType(false, true)

@compiletime
function poisonSpit()
    int array MANA = [110, 120, 130, 140, 160]
    real array COOLDOWN = [16, 16, 16, 16, 16]

    let aDef = new AbilityDefinitionDarkRangerSilence(ABILITY_POISON_SPIT)
        ..setupIcon("BTNSlowSpellGreen")
        ..setAnimationNames("spell")
        ..setupWithHotKey("Poison Spit", "W")
        ..setLightningEffects("")
        ..setArtCaster("")
        ..setArtEffect("")
        ..setMissileArt("")
        ..setArtTarget("")
        ..setLearnString("Spits poison at the target area. Enemies within the area of effect are slowed, have reduced armor and take damage over time.",
        (int lvl) -> (begin
            return "{0} damage per second, {1} slow, {2} armor, lasts {3} seconds.".format(
            POISON_SPIT_DOT[lvl-1].str()+POISON_SPIT_DOT_BONUS.getBonusString(C_INT), 
            (-POISON_SPIT_SLOW_MS[lvl-1]).str()+"%",
            (-POISON_SPIT_ARMOR_REDUCTION[lvl-1]).str(),
            POISON_SPIT_DURATION[lvl-1].str())
        end) )

    for lvl = 1 to 5
        aDef
            ..setCooldown(lvl, COOLDOWN[lvl-1])
            ..setAreaofEffect(lvl, POISON_SPIT_AOE[lvl-1])
            ..setManaCost(lvl, MANA[lvl-1])
            ..setTargetsAllowed(lvl, "none")
            ..setTooltipNormalExtended(lvl, "Spits poison at the target area. Enemies within the area of effect are slowed by {0}, have their armor reduced by {1} and take {2} damage per second.|nLasts {3} seconds.".format(
            (-POISON_SPIT_SLOW_MS[lvl-1]).str()+"%", (-POISON_SPIT_ARMOR_REDUCTION[lvl-1]).str(), POISON_SPIT_DOT[lvl-1].str()+POISON_SPIT_DOT_BONUS.getBonusString(C_INT), POISON_SPIT_DURATION[lvl-1].str()))

    let aDefSlowAura = new AbilityDefinitionAuraSlow(ABILITY_POISON_SPIT_SLOWED)
        ..setLevels(5)
        ..hideIcon()
        ..setArtTarget("Units\\Undead\\PlagueCloud\\PlagueCloudtarget.mdl")
        ..setTargetAttachmentPoint("chest")
    for lvl = 1 to 5
        aDefSlowAura
            //..setMovementSpeedFactor(lvl, POISON_SPIT_SLOW_MS[lvl-1]) movement speed will be handled via trigger
            ..setMovementSpeedFactor(lvl, 0)
            ..setTargetsAllowed(lvl, "invulnerable,self,vulnerable")
            ..setAreaofEffect(lvl, 1)
            ..setBuffs(lvl, int2fourchar(BUFF_ID_POISON_SPIT))

    let aDefArmorReduction = new AbilityDefinitionDefenseBonusPlus1(ABILITY_POISON_SPIT_ARMOR_REDUCED)
        ..setLevels(5)
        ..hideIcon()
        ..setItemAbility(false)
    for lvl = 1 to 5
        aDefArmorReduction
            ..setDefenseBonus(lvl, POISON_SPIT_ARMOR_REDUCTION[lvl-1])

constant real array EMPOWERED_STRIKE_DAMAGE = [80, 140, 200, 260, 320]
constant real EMPOWERED_STRIKE_DAMAGE_BONUS = 150

@compiletime
function empoweredStrike()
    int array MANA = [50, 50, 50, 50, 50]
    real array COOLDOWN = [5, 5, 5, 5, 5]

    let aDef = new AbilityDefinitionSeaWitchForkedLightning(ABILITY_EMPOWERED_STRIKE)
        ..setupIcon("BTNEnchantWeaponGreen")
        ..setAnimationNames("spell,throw")
        ..setupWithHotKey("Empowered Strike", "E")
        ..setLightningEffects("")
        ..setArtSpecial("")
        ..setLightningEffects("")
        ..setLearnString("Strikes the target enemy unit with a powerful melee attack dealing physical damage.", (int lvl) -> (begin
            return "{0} damage.".format( EMPOWERED_STRIKE_DAMAGE[lvl-1].str()+EMPOWERED_STRIKE_DAMAGE_BONUS.getBonusString(C_STR))
        end) )

    for lvl = 1 to 5
        aDef
            ..setCooldown(lvl, COOLDOWN[lvl-1])
            ..setManaCost(lvl, MANA[lvl-1])
            ..setNumberofTargetsHit(lvl, 1)
            ..setDamageperTarget(lvl, 0)
            ..setCastRange(lvl, 150)
            ..setDurationNormal(lvl, 0.1)
            ..setTargetsAllowed(lvl, "air,enemies,ground,neutral,nonancient,organic")
            ..setTooltipNormalExtended(lvl, "Strikes the target enemy unit with a powerful melee attack dealing {0} physical damage.".format( 
            EMPOWERED_STRIKE_DAMAGE[lvl-1].str()+EMPOWERED_STRIKE_DAMAGE_BONUS.getBonusString(C_STR)))



constant real array PARALYZING_STRIKE_DAMAGE = [200, 250, 300, 350, 400]
constant real PARALYZING_STRIKE_DAMAGE_BONUS = 200
constant real array PARALYZING_STRIKE_DURATION = [1.6, 1.8, 2, 2.2, 2.4]
constant real PARALYZING_STRIKE_DURATION_BONUS = 1

@compiletime
function paralyzingStrike()
    real array RANGE = [500, 600, 700, 800, 900]
    int array MANA = [180, 190, 200, 210, 220]
    real array COOLDOWN = [75, 75, 75, 75, 75]

    let aDef = new AbilityDefinitionFarseerChainLightning(ABILITY_PARALYZING_STRIKE)
        ..setupIcon("BTNINV_ThrowingKnife_04")
        ..setAnimationNames("spell, slam")
        ..setupWithHotKey("Paralyzing Strike", "R")
        ..setLightningEffects("")
        ..setMissileArt("")
        ..setArtTarget("")
        ..setLearnString("Deals massive magical damage to the target, stunning it and teleports the Python Warriores behind the target.", (int lvl) -> (begin
            return "{0} damage, {1} seconds stun.".format( PARALYZING_STRIKE_DAMAGE[lvl-1].str()+PARALYZING_STRIKE_DAMAGE_BONUS.getBonusString(C_INT),
            PARALYZING_STRIKE_DURATION[lvl-1].toString()+PARALYZING_STRIKE_DURATION_BONUS.getBonusString(C_INT))
        end) )

    for lvl = 1 to 5
        aDef
            ..setDamageperTarget(lvl, 0)
            ..setDamageReductionperTarget(lvl, 0)
            ..setNumberofTargetsHit(lvl, 0)
            ..setCastRange(lvl, RANGE[lvl-1])
            ..setCooldown(lvl, COOLDOWN[lvl-1])
            ..setManaCost(lvl, MANA[lvl-1])
            ..setTargetsAllowed(lvl, "enemies,ground,neutral,nonancient,organic,hero")
            ..setTooltipNormalExtended(lvl, "Deals {0} magical damage to the target, stunning it for {1} seconds and teleports the Python Warriores behind the target.".format(
            PARALYZING_STRIKE_DAMAGE[lvl-1].str()+PARALYZING_STRIKE_DAMAGE_BONUS.getBonusString(C_INT),
            PARALYZING_STRIKE_DURATION[lvl-1].toString()+PARALYZING_STRIKE_DURATION_BONUS.getBonusString(C_INT)))




group spitDummies = CreateGroup()

function setupStats()
    heroType
        //..setStat(Stat.AD, 10, 40)
        ..setStat(Stat.AR, 11, 27)
        ..setStat(Stat.AS, 27, 64)
        ..setStat(Stat.HP, 8, 39)
        ..setStat(Stat.HR, 18, 54)
        ..setStat(Stat.MP, 13, 46)
        ..setStat(Stat.MR, 16, 39)
        ..setStat(Stat.MS, 17, 71)
        ..setStat(Stat.STR, 13, 53)
        ..setStat(Stat.AGI, 18, 34)
        ..setStat(Stat.INT, 7, 43)

function onSpellCast()
    let spellId = GetSpellAbilityId()
    let caster = GetTriggerUnit()
    let level = caster.getAbilityLevel(spellId)

    if(spellId==ABILITY_MISTWALK)
        caster.dispelBuffs(true, true)
        caster.addBuff( caster, (MISTWALK_DURATION[level-1]).bonus(caster.getInt(), MISTWALK_DURATION_BONUS), INVIS, 1)
        return

    if(spellId==ABILITY_POISON_SPIT)
        let x = GetSpellTargetX()
        let y = GetSpellTargetY()
        let attacker = createUnit(caster.getOwner(), 'u000', caster.getPos(), angle(Atan2(y - caster.getY(), x - caster.getX())))
        attacker.setAbilityLevel('A007', level)

        if(not attacker.issuePointOrder("attackground", vec2(x,y)))
            print("failed to order attackground")
        attacker.setTimedLife(1)
        return

    if(spellId==ABILITY_EMPOWERED_STRIKE)
        let target = GetSpellTargetUnit()
        caster.dealDamage(target, (EMPOWERED_STRIKE_DAMAGE[level-1]).bonus(caster.getStr(), EMPOWERED_STRIKE_DAMAGE_BONUS) , ReductionType.PHYSICAL)
        target.addEffect("Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl", "chest").destr()
        SOUND_EMPOWERED_STRIKE.playOnPoint(target.getPos3Zero()).snd.setVolume(150)
        return

    if(spellId==ABILITY_PARALYZING_STRIKE)
        let target = GetSpellTargetUnit()
        var targetPos = target.getPos()
        var casterPos = caster.getPos()
        var portPos = targetPos.polarOffset(casterPos.angleTo(targetPos), 100)
        SOUND_PARALYZING_STRIKE.playOnPoint(targetPos.toVec3())
        doAfter(0, () -> caster.setPos(portPos))
        target.addBuffReduced( caster, (PARALYZING_STRIKE_DURATION[level-1]).bonus(caster.getInt(), PARALYZING_STRIKE_DURATION_BONUS) , STUNNED, 1)
        caster.dealDamage(target, (PARALYZING_STRIKE_DAMAGE[level-1]).bonus(caster.getInt(), PARALYZING_STRIKE_DAMAGE_BONUS) , ReductionType.MAGIC)
        return

    

function onAttack(unit attacker, unit target, boolean _isActive)
    let level = attacker.getAbilityLevel(ABILITY_ENVENOMED_BLADES)
    if level != 0
        target.addBuffReduced( attacker, ENVENOMED_BLADES_DURATION[level-1], BUFF_ENVENOMED_BLADES, level)


//in for group
function poisonSpitPeriodic()
    unit poisonSpitDummy = GetEnumUnit()
    int level = poisonSpitDummy.getTypeId()+1-'n007'
    player owner =poisonSpitDummy.getOwner()
    unit hero =  Hero.getHero(owner).toUnit()
    if(level>3)
        level = poisonSpitDummy.getTypeId()+4-'n00A'

    group nearby = CreateGroup()
    nearby.enumUnitsInRange(poisonSpitDummy.getPos(), POISON_SPIT_AOE[level-1])

    while(not nearby.isEmpty())
        unit target = FirstOfGroup(nearby)
        nearby.removeUnit(target)
        if not target.isType(UNIT_TYPE_STRUCTURE) and target.isTargetable(poisonSpitDummy.getOwner(), false, true)
            target.addBuff( hero, 0.5, BUFF_POISON_SPIT, level)

    nearby.destr()

function initHeroType()
    setupStats()

    heroType.setOnAttackFunc((unit attacker, unit target, boolean isActive, boolean advanced) -> onAttack(attacker, target, isActive))

    var abilityList = new LinkedList<int>
        ..add('A009')
    BUFF_ENVENOMED_BLADES.setup(abilityList, 'B007')
    BUFF_ENVENOMED_BLADES.setPeriodicTime(1)
    BUFF_ENVENOMED_BLADES.addPeriodicFunction((Buff thisBuff)-> (begin
        thisBuff.getCaster().dealDamage(thisBuff.getTarget(), 
        (ENVENOMED_BLADES_DAMAGE[thisBuff.getLevel()-1]).bonus(thisBuff.getCaster().getInt(), ENVENOMED_BLADES_DAMAGE_BONUS)
        , ReductionType.MAGIC)
    end) )
    

    //Poison Spit
    abilityList = new LinkedList<int>
        ..add(ABILITY_POISON_SPIT_ARMOR_REDUCED)
        ..add(ABILITY_POISON_SPIT_SLOWED)
    BUFF_POISON_SPIT.setup(abilityList, BUFF_ID_POISON_SPIT)
    BUFF_POISON_SPIT.addApplyFunction( (Buff thisBuff) -> (begin
        thisBuff.getCaster().dealDamage(thisBuff.getTarget(), 
        (POISON_SPIT_DOT[thisBuff.getLevel()-1]).bonus(thisBuff.getCaster().getInt(), POISON_SPIT_DOT_BONUS)/4
        , ReductionType.MAGIC)
    end) )
    BUFF_POISON_SPIT.addFirstFunction( (Buff thisBuff) -> (begin
        thisBuff.getTarget().wrapper().addStatRelativeBonus( Stat.MS, POISON_SPIT_SLOW_MS[thisBuff.getLevel()-1]*10 )
    end) )

    BUFF_POISON_SPIT.addEndFunction( (Buff thisBuff) -> (begin
        thisBuff.getTarget().wrapper().addStatRelativeBonus( Stat.MS, -POISON_SPIT_SLOW_MS[thisBuff.getLevel()-1]*10 )
    end) )

    onEnter(() -> (begin
        let spitDummy = getEnterLeaveUnit()
        int level = spitDummy.getTypeId()+1-'n007'
        if(level>3)
            level = spitDummy.getTypeId()+4-'n00A'

        if level >= 1 and level <= 5
            spitDummy.setTimedLife(POISON_SPIT_DURATION[level-1])
            spitDummies.addUnit(spitDummy)
            SOUND_POISON_SPIT.playOnPoint(spitDummy.getPos3Zero())


            real x
            real y
            real angle
            for i = 0 to 9 + level*3
                angle = i/(10 + level*3)*2*bj_PI
                x = spitDummy.getX() + (POISON_SPIT_AOE[level-1]-50) * angle.cos()
                y = spitDummy.getY() + (POISON_SPIT_AOE[level-1]-50) * angle.sin()
                var e = AddSpecialEffect("Units\\Undead\\PlagueCloud\\PlagueCloudtarget.mdl", x, y)
                doAfter(5.+level, () -> DestroyEffect(e))

    end) )

    onLeave(() -> (begin
        let spitDummy = getEnterLeaveUnit()
        int level = spitDummy.getTypeId()+1-'n007'
        if(level>3)
            level = spitDummy.getTypeId()+4-'n00A'

        if level >= 1 and level <= 5
            
            spitDummies.removeUnit(spitDummy)
    end) )

    let spitPeriodicTrigger = CreateTrigger()
    spitPeriodicTrigger.registerTimerEvent(0.25, true)
    spitPeriodicTrigger.addAction(() -> (begin
        ForGroup(spitDummies, function poisonSpitPeriodic)
    end) )


    heroType.addOnSpellCastFunc(function onSpellCast)


init
    heroType = new HeroType(HERO_PYTHON_WARRIORES, "BTNGreenViper")
        ..setOnInitFunction(() -> initHeroType())
    



