package PythonWarriores

import HeroType
import HeroControl
import Stats
import OnAttack
import BuffType
import LinkedList
import Buff
import General
import BuffTypeConfig
import ClosureTimers
import OnUnitEnterLeave

public constant HERO_PYTHON_WARRIORES = 'H00J'
HeroType heroType

constant ENVENOMED_BLADES = new BuffType(false, true)
constant DODGE = new BuffType(true, true)

constant POISON_SPIT = new BuffType(false, true)

group spitDummies = CreateGroup()

function setupStats()
    heroType
        ..setStat(Stat.AD, 10, 40)
        ..setStat(Stat.AR, 10, 25)
        ..setStat(Stat.AS, 25, 60)
        ..setStat(Stat.HP, 15, 40)
        ..setStat(Stat.HR, 20, 50)
        ..setStat(Stat.MP, 10, 30)
        ..setStat(Stat.MR, 15, 25)
        ..setStat(Stat.MS, 20, 60)
        ..setStat(Stat.STR, 5, 15)
        ..setStat(Stat.WP, 20, 35)
        ..setStat(Stat.INT, 5, 40)

function onSpellCast()
    let spellId = GetSpellAbilityId()
    var caster = GetTriggerUnit()
    let level = caster.getAbilityLevel(spellId)

    if(spellId=='A00B') //Dodge
        caster.dispelBuffs(true, true)
        new Buff(caster, caster, (3.+1*level).bonus(caster.getInt(),4), INVIS, 1)

    if(spellId=='A00H') //Poison Spit
        let x = GetSpellTargetX()
        let y = GetSpellTargetY()
        let attacker = createUnit(caster.getOwner(), 'u000', caster.getPos(), angle(Atan2(y - caster.getY(), x - caster.getX())))
        attacker.setAbilityLevel('A00I', level)

        if(not attacker.issuePointOrder("attackground", vec2(x,y)))
            print("failed to order attackground")
        attacker.setTimedLife(6)


function onAttack()
    if(OnAttack.isActive())
        new Buff(OnAttack.getTarget(), OnAttack.getAttacker(), 5, ENVENOMED_BLADES, OnAttack.getAttacker().getAbilityLevel('A00A'))

//in for group
function poisonSpitPeriodic()
    unit poisonSpitDummy = GetEnumUnit()
    int level = poisonSpitDummy.getTypeId()+1-'n007'
    player owner =poisonSpitDummy.getOwner()
    unit hero =  Hero.getHero(owner).toUnit()
    if(level>3)
        level = poisonSpitDummy.getTypeId()+4-'n00A'

    group nearby = CreateGroup()
    nearby.enumUnitsInRange(poisonSpitDummy.getPos(), 175.+25*level)

    while(not nearby.isEmpty())
        unit target = FirstOfGroup(nearby)
        nearby.removeUnit(target)
        if(IsUnitEnemy(target, owner) and not target.isType(UNIT_TYPE_ANCIENT) and not target.isType(UNIT_TYPE_STRUCTURE) and target.isAlive())
            new Buff(target, hero, 0.5, POISON_SPIT, level)

    nearby.destr()

init
    heroType = new HeroType(HERO_PYTHON_WARRIORES)
    heroType.addOnAttackFunc(function onAttack)
    setupStats()

    var abilityList = new LinkedList<int>
    ..add('A009')
    ENVENOMED_BLADES.setup(abilityList, 'B007')
    ENVENOMED_BLADES.setPeriodicTime(1)
    ENVENOMED_BLADES.onPeriodicTrigger = CreateTrigger()
        ..addAction(()-> (begin
        let thisBuff = Buff.getTriggerBuff()
        thisBuff.getCaster().dealDamage(thisBuff.getTarget(), 
        (5.*thisBuff.getLevel()).bonus(thisBuff.getCaster().getInt(), 20)
        , ReductionType.MAGIC)
        print(thisBuff.getTarget().getName()+" poisoned with level "+thisBuff.getLevel().toString()+" dealing"+(5.*thisBuff.getLevel()).bonus(thisBuff.getCaster().getInt(), 20).toString()+" damage.")
    end) )

    abilityList = new LinkedList<int>
    ..add('A00C')
    ..add('A00D')
    DODGE.setup(abilityList, 'B008')
    

    //Poison Spit
    abilityList = new LinkedList<int>
    ..add('A00J')
    ..add('A00K')
    POISON_SPIT.setup(abilityList, 'B00B')
    POISON_SPIT.onApply = CreateTrigger()

    //create api, instead of directly using the trigger variable
    //make trigger variable private 
    //api automatically creates trigger, if null

    POISON_SPIT.onApply.addAction( () -> (begin
        let thisBuff = Buff.getTriggerBuff()
        thisBuff.getCaster().dealDamage(thisBuff.getTarget(), 
        (1.25*thisBuff.getLevel()).bonus(thisBuff.getCaster().getInt(), 5)
        , ReductionType.MAGIC)
    end) )

    onEnter(() -> (begin
        let spitDummy = getEnterLeaveUnit()
        int level = spitDummy.getTypeId()+1-'n007'
        if(level>3)
            level = spitDummy.getTypeId()+4-'n00A'

        if level >= 1 and level <= 5
            spitDummies.addUnit(spitDummy)

            real x
            real y
            real angle
            for i = 0 to 9 + level*3
                angle = i/(10 + level*3)*2*bj_PI
                x = spitDummy.getX() + (140 + 25*level) * angle.cos()
                y = spitDummy.getY() + (140 + 25*level) * angle.sin()
                var e = AddSpecialEffect("Units\\Undead\\PlagueCloud\\PlagueCloudtarget.mdl", x, y)
                doAfter(5.+level, () -> DestroyEffect(e))

    end) )

    onLeave(() -> (begin
        let spitDummy = getEnterLeaveUnit()
        int level = spitDummy.getTypeId()+1-'n007'
        if(level>3)
            level = spitDummy.getTypeId()+4-'n00A'

        if level >= 1 and level <= 5
            
            spitDummies.removeUnit(spitDummy)
    end) )

    let spitPeriodicTrigger = CreateTrigger()
    spitPeriodicTrigger.registerTimerEvent(0.25, true)
    spitPeriodicTrigger.addAction(() -> (begin
        ForGroup(spitDummies, function poisonSpitPeriodic)
    end) )


    heroType.addOnSpellCastFunc(function onSpellCast)