package IUnitType

import UnitTypeImpl

public interface IUnitType
    function getUnitId() returns int
    function getBounty() returns int
    function getBaseAttack() returns int
    function getBaseArmor() returns int
    function getBaseHp() returns int
    function getPowerLevel() returns int
    function getUpgradeAttack(player owner) returns int
    function getUpgradeArmorCount(player owner) returns int
    function getUpgradeArmor(player owner) returns int
    function getHitBox() returns int
    function getModel() returns string

public abstract class IUnitTypeStatic
    protected static IUnitTypeStatic singleton
    abstract function get(int unitTypeId) returns IUnitType
    abstract function create(int baseHp, int unitId, int bounty, int baseAttack, int upgradeAttack, int attackUpgradeId, int baseArmor, int upgradeArmor, int armorUpgradeId, int hitBox, string modelPath, int powerLevel) returns IUnitType

public abstract class UnitType
    static function get(int unitTypeId) returns IUnitType
        return IUnitTypeStatic.singleton.get(unitTypeId)
    static function create(int baseHp, int unitId, int bounty, int baseAttack, int upgradeAttack, int attackUpgradeId, int  baseArmor, int upgradeArmor, int armorUpgradeId, int hitBox, string modelPath, int powerLevel) returns IUnitType
        return IUnitTypeStatic.singleton.create(baseHp, unitId, bounty, baseAttack, upgradeAttack, attackUpgradeId, baseArmor, upgradeArmor, armorUpgradeId, hitBox, modelPath, powerLevel)

init
    IUnitTypeStatic.singleton = new UnitTypeStaticImpl()
