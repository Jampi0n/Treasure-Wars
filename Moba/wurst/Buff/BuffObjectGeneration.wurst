package BuffObjectGeneration

import AbilityObjEditing
import BuffObjEditing
import ObjectIdGenerator
import ObjectIds

/* A custom object id generator is used to avoid collisions.
The buff id is retrieved with an offset from the ability id, so by creating buffs with the buff id generator
before creating with this system there would be collisions.*/
constant BUFF_SYSTEM_GEN = new IdGenerator('AW00')


function createBuffAbility(string name, string desc, string icon, string model, boolean positive ) returns integer
    BuffDefinition bDef
    let abiltiyId = BUFF_SYSTEM_GEN.next()
    let buffId = abiltiyId + 16777216  // 'Axxx' -> 'Bxxx'
    if(positive)
        let aDef = new AbilityDefinitionUnholyAuracreep(abiltiyId)
        aDef.setLifeRegenerationIncrease(1, 0)
        aDef.setMovementSpeedIncrease(1, 0)
        
        aDef.setButtonPositionNormalX(0)
        aDef.setButtonPositionNormalY(-11)
        aDef.setBuffs(1, int2fourchar(buffId))
        aDef.setArtTarget(model)
        aDef.setAreaofEffect(1, 1)
        aDef.setTargetsAllowed(1, "self")
    else
        let aDef = new AbilityDefinitionAuraSlow(abiltiyId)
        aDef.setMovementSpeedFactor(1, 0)

        aDef.setButtonPositionNormalX(0)
        aDef.setButtonPositionNormalY(-11)
        aDef.setBuffs(1, int2fourchar(buffId))
        aDef.setArtTarget(model)
        aDef.setAreaofEffect(1, 1)
        aDef.setTargetsAllowed(1, "self")


    bDef = new BuffDefinition(buffId, 'BUau')

    bDef.setIcon(icon)
    bDef.setTooltipNormal(1, name)
    bDef.setTooltipNormalExtended(1, desc)

    return abiltiyId


/*@compiltetime
public constant abilityCloak1 = compiletime(createBuffAbility("Cloak", "This is a cloak.", "BTNCloakOfFlames", "Abilities\\Spells\\NightElf\\Immolation\\ImmolationTarget.mdl", true))
public constant abilityCloak2 = compiletime(createBuffAbility("Cloak", "This is a cloak.", "BTNCloakOfFlames", "Abilities\\Spells\\NightElf\\Immolation\\ImmolationTarget.mdl", true))*/



