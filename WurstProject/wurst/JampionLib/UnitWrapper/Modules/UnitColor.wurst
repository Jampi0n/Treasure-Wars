package UnitColor

import UnitWrapper

/**
Adds basic unit coloring to the unit wrapper.
This is mainly for implementing the blue coloring of frost spells.
**/
public module UnitColor
    private color defaultColor
    private int blueCount = 0

    private function wrapper() returns UnitWrapper
        return (this castTo int) castTo UnitWrapper
    private static function fromUnit(unit u) returns thistype
        return (UnitWrapper.getWrapper(u) castTo int) castTo thistype

    construct()
        let u = wrapper().toUnit()
        this.defaultColor = color(u.getField(UNIT_IF_TINTING_COLOR_RED), u.getField(UNIT_IF_TINTING_COLOR_GREEN), u.getField(UNIT_IF_TINTING_COLOR_BLUE))

    function setDefaultColor(color c)
        this.defaultColor = c
        if blueCount <= 0
            wrapper().toUnit().setVertexColor(this.defaultColor)

    function incBlue()
        blueCount++
        if blueCount == 1
            wrapper().toUnit().setVertexColor(140, 220, 255, 255)

    function decBlue()
        blueCount--
        if blueCount == 0
            wrapper().toUnit().setVertexColor(this.defaultColor)

    function modBlue(int value)
        blueCount += value
        if blueCount > 0
            wrapper().toUnit().setVertexColor(140, 220, 255, 255)
        else
            wrapper().toUnit().setVertexColor(this.defaultColor)

    function destroyColor()





